{"openapi":"3.0.0","info":{"title":"Zoom Mail API","description":"Zoom Mail API access mailbox data for your apps. Build private and public offerings on the [Zoom App Marketplace](https://marketplace.zoom.us/) with RESTful APIs. Dive into [OAuth](https://developers.zoom.us/docs/integrations/oauth/) docs for credential acquisition and app creation.","termsOfService":"https://zoom.us/docs/en-us/zoom_api_license_and_tou.html","contact":{"name":"Zoom Developers","url":"https://developer.zoom.us/"},"version":"2"},"externalDocs":{"description":"Find out more about Swagger","url":"https://swagger.io"},"servers":[{"url":"https://api.zoom.us/v2"}],"paths":{"/emails/mailboxes/{email}/drafts":{"get":{"tags":["Drafts"],"summary":"List emails from draft folder","description":"Lists the draft messages in the mailbox.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:list_drafts`,`email:read:list_drafts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"list_draft_emails","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"includeSpamTrash","in":"query","description":"Include messages from SPAM and TRASH in the results. Value should be either \"true\" or \"false\".","required":false,"schema":{"type":"boolean","example":true}},{"name":"maxResults","in":"query","description":"Maximum number of drafts to return. This field defaults to 50. The maximum allowed value for this field is 500.","required":false,"schema":{"type":"integer","example":50}},{"name":"pageToken","in":"query","description":"Page token to retrieve a specific page of results in the list.","required":false,"schema":{"type":"string","example":"e856408d55352894"}},{"name":"q","in":"query","description":"Specify a server side elastic search query.","required":false,"schema":{"type":"string","example":"{label:xxx label:yyy}"}}],"responses":{"200":{"description":"The response body contains list of drafts in the mailbox.","content":{"application/json":{"schema":{"type":"object","properties":{"drafts":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the draft.","example":"89f1000000000000_e856432f45a75bea_001"},"message":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"89f1000000000000_e856432f45a75bea_001"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"89f1000000000000_e856432f45a88bea_001"}},"description":"The message info of the draft."}}}},"nextPageToken":{"type":"string","description":"Token to retrieve the next page of results in the list.","example":"e856432f45a75bea"},"resultSizeEstimate":{"type":"integer","description":"Estimated number of results in the response.","example":1}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:list_drafts","email:read:list_drafts:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:list_drafts","email:read:list_drafts:admin"]}},"post":{"tags":["Drafts"],"summary":"Create a new draft email","description":"Creates a new draft email message.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:draft`,`email:write:draft:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"create_draft_email","parameters":[{"name":"email","in":"path","description":"The mailbox's email address, or special value \"me\" to indicate the primary mailbox for the authenticated user.\n\n","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of Draft.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"object","properties":{"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string.","example":"TUlNRS1WZXJzaW9uOiAxLjANCkRhdGU6IFRodSwgMjggTWF5IDIwMjAgMTQ6MDE6MTkgLTA3MDANCk1lc3NhZ2UtSUQ6 IDxDQU89ekZkNVZUMW56PUJRRzRET2UxdFhxY3FXT1VzWUhqbjdxNXE9OTZmY0RHN2lNOUFAbWFpbC5nbWFpbC5jb20+DQpTdWJqZ WN0OiB0ZXN0IHRocmVhZGluZyBOby4gMQ0KRnJvbTogRGViYmllIFpoYW5nIDxkZWJiaWUuemhhbmdAem9vbS51cz4NClRvOiBkZW JiaWUudGVzdGVyMTBAZ21haWwuY29tDQpDb250ZW50LVR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsgYm91bmRhcnk9IjAwMDA wMDAwMDAwMDVlNzI3YzA1YTZiYmExYmUiDQoNCi0tMDAwMDAwMDAwMDAwNWU3MjdjMDVhNmJiYTFiZQ0KQ29udGVudC1UeXBlOiB0 ZXh0L3BsYWluOyBjaGFyc2V0PSJVVEYtOCINCg0KVGVzdCB0aHJlYWRpbmcuICBBdHRlbXB0IDEuDQoNCi0tMDAwMDAwMDAwMDAwN WU3MjdjMDVhNmJiYTFiZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9IlVURi04Ig0KQ29udGVudC1UcmFuc2Zlci 1FbmNvZGluZzogcXVvdGVkLXByaW50YWJsZQ0KDQo8ZGl2IGRpcj0zRCJsdHIiPlRlc3QgdGhyZWFkaW5nLj1DMj1BMCBBdHRlbXB 0IDEuPC9kaXY+DQoNCi0tMDAwMDAwMDAwMDAwNWU3MjdjMDVhNmJiYTFiZS0t"}},"description":"The message content of the draft.  If the request body does not contain the Message object, server will create an empty draft."}}}}}},"responses":{"200":{"description":"If successful, the response body contains an instance of draft object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the draft.","example":"89f1000000000000_e856432f45a75bea_001"},"message":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"89f1000000000000_e856432f45a75bea_001"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"89f1000000000000_e856432f45a75bea_001"},"labelIds":{"type":"array","description":"List of label IDs of this message.","items":{"type":"string","description":"Label ID of the message.","example":"DRAFT"}}},"description":"The message info of the draft."}},"description":"The message content of the draft."}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:draft","email:write:draft:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:draft","email:write:draft:admin"]}}},"/emails/mailboxes/{email}/drafts/send":{"post":{"tags":["Drafts"],"summary":"Send out a draft email","description":"Sends the specified draft. \n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:send_draft`,`email:write:send_draft:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"send_draft_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of draft.","content":{"application/json":{"schema":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the draft to identify which draft email will be used to send.  If addition, if request body contains the \"message\" object, the message content will be used to update the draft before it is sent out.","example":"89f1000000000000_e856432f45a75bea_001"},"message":{"type":"object","properties":{"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string. If request body contains the \"message\" object, the message content will be used to update the draft before it is sent out.","example":"RnJvbTogZGViYmllQHpvb20udXMNCkRhdGU6IFN1biBPY3QgMTcgMDQ6NDE6MTMgMjAxMCAoUERUKQ0KDQpUaGlzIGlzIGRyYWZ0IHRlc3QgbWVzc2FnZS4gVmVyeSBzaW1wbGUgcGxhaW4gdGV4dC4g"}},"description":"The message content of the draft."}}}}}},"responses":{"200":{"description":"The response body contains an instance of message object.  **Note**: The message object contains only the ID, thread ID and label IDs.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.  When a draft is sent, the message copy will be processed and put into SCHEDULED folder for system delay in case user want to cancel, and eventually move to SENT folder.","example":"6ddf401500000000_e8562d8808ecdddf_005"},"threadId":{"type":"string","description":"The immutable thread ID of the sent message.","example":"6ddf401500000000_e8562d8808ecdddf_005"},"labelIds":{"type":"array","description":"List of label IDs on the message.","items":{"type":"string","description":"One of the label IDs on the message.","example":"SCHEDULED"}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:send_draft","email:write:send_draft:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:send_draft","email:write:send_draft:admin"]}}},"/emails/mailboxes/{email}/drafts/{draftId}":{"get":{"tags":["Drafts"],"summary":"Get the specified draft email","description":"Retrieves the specified draft.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:draft`,`email:read:draft:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_draft_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"draftId","in":"path","description":"The immutable ID of the draft.","required":true,"schema":{"type":"string","example":"89f1000000000000_e856432f45a75bea_001"}},{"name":"format","in":"query","description":"The format to return the draft in. ","required":false,"schema":{"type":"string","example":"full","enum":["full","metadata","raw","minimal"]}}],"responses":{"200":{"description":"The successful response body contains an instance of draft.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the draft.","example":"89f1000000000000_e856432f45a75bea_001"},"message":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"01d1000000000000_e8bc79717a36a5ff_006"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"3bc0000000000000_e8572723056fa10d_001"},"labelIds":{"type":"array","description":"List of label IDs applied to this message.","items":{"type":"string","description":"label ID of the message.","example":"DRAFT"}},"snippet":{"type":"string","description":"A preview part of the message text.","example":"Hello, Jane Doe, writing to you for next weeks meeting."},"historyId":{"type":"string","description":"The ID of the last history event that modified this message.","example":"457889"},"internalDate":{"type":"string","description":"The internal message creation timestamp (epoch milliseconds), which determines message ordering in the folder.","example":"1705098864740"},"payload":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"1.1"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"text/html"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"cats.jpg"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"To"},"value":{"type":"string","description":"The value of the MIME email header.","example":"john.doe@example.com"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_1"},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":5434},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":"dGhpcyBsaW5lIHVzZXMgbWFpbCBtZXJnZSBAZmlyc3RuYW1lCnRoaXMgbGluZSBkb2VzIG5vdCB1c2UgbWFpbCBtZXJnZSBAZmlyc3RuYW1lCg=="}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"multipart/alternative"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Type"},"value":{"type":"string","description":"The value of the MIME email header.","example":"multipart/ALTERNATIVE"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_1"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":""},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":0}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0.0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"text/plain"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo1.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Type"},"value":{"type":"string","description":"The value of the MIME email header.","example":"text/PLAIN"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_2"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":"W2ltYWdlOiBTY3JlZW5zaG90IDIwMjQtMDItMDQgYXQgMTAuMjIuMDjigK9QTS5wbmddCgpXaWxsIHRoaXMgZ2VuZXJhdGUgbXVsdGlwbGUgcGFydD8K"},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":87}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0.0.0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"multipart/related"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo2.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Transfer-Encoding"},"value":{"type":"string","description":"The value of the MIME email header.","example":"7bit"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_3"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":""},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":0}},"description":"The message part body for this part, which may be empty for container MIME message parts."}}}}},"description":"An instance of MessagePart object."}}},"description":"An instance of MessagePart object."}}},"description":"payload is of MIME MessagePart object."},"sizeEstimate":{"type":"integer","description":"Estimated size in bytes of the message.","example":50000},"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in get API when the format=RAW parameter is supplied.","example":"TUlNRS1WZXJzaW9uOiAxLjANCkRhdGU6IFRodSwgMjggTWF5IDIwMjAgMTQ6MDE6MTkgLTA3MDANCk1lc3NhZ2UtSUQ6 IDxDQU89ekZkNVZUMW56PUJRRzRET2UxdFhxY3FXT1VzWUhqbjdxNXE9OTZmY0RHN2lNOUFAbWFpbC5nbWFpbC5jb20+DQpTdWJqZ WN0OiB0ZXN0IHRocmVhZGluZyBOby4gMQ0KRnJvbTogRGViYmllIFpoYW5nIDxkZWJiaWUuemhhbmdAem9vbS51cz4NClRvOiBkZW JiaWUudGVzdGVyMTBAZ21haWwuY29tDQpDb250ZW50LVR5cGU6IG11bHRpcGFydC9hbHRlcm5hdGl2ZTsgYm91bmRhcnk9IjAwMDA wMDAwMDAwMDVlNzI3YzA1YTZiYmExYmUiDQoNCi0tMDAwMDAwMDAwMDAwNWU3MjdjMDVhNmJiYTFiZQ0KQ29udGVudC1UeXBlOiB0 ZXh0L3BsYWluOyBjaGFyc2V0PSJVVEYtOCINCg0KVGVzdCB0aHJlYWRpbmcuICBBdHRlbXB0IDEuDQoNCi0tMDAwMDAwMDAwMDAwN WU3MjdjMDVhNmJiYTFiZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9IlVURi04Ig0KQ29udGVudC1UcmFuc2Zlci 1FbmNvZGluZzogcXVvdGVkLXByaW50YWJsZQ0KDQo8ZGl2IGRpcj0zRCJsdHIiPlRlc3QgdGhyZWFkaW5nLj1DMj1BMCBBdHRlbXB 0IDEuPC9kaXY+DQoNCi0tMDAwMDAwMDAwMDAwNWU3MjdjMDVhNmJiYTFiZS0t"}},"description":"The message content of the draft."}},"description":"The message content of the draft."}}}},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:draft","email:read:draft:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:draft","email:read:draft:admin"]}},"put":{"tags":["Drafts"],"summary":"Update the specified draft email","description":"Replaces a draft email's content.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:update:draft`,`email:update:draft:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"update_draft_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"draftId","in":"path","description":"The immutable ID of the draft.","required":true,"schema":{"type":"string","example":"89f1000000000000_e856432f45a75bea_001"}}],"requestBody":{"description":"The request body contains an instance of Draft.","content":{"application/json":{"schema":{"required":["message"],"type":"object","properties":{"message":{"type":"object","properties":{"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string.","example":"RnJvbTogZGViYmllQHpvb20udXMNCkRhdGU6IFN1biBPY3QgMTcgMDQ6NDE6MTMgMjAxMCAoUERUKQ0KDQpUaGlzIGlzIGRyYWZ0IHRlc3QgbWVzc2FnZS4gVmVyeSBzaW1wbGUgcGxhaW4gdGV4dC4g"}}}}}}}},"responses":{"200":{"description":" The response body contains an instance of updated draft.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the draft.","example":"89f1000000000000_e856432f45a75bea_001"},"message":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"89f1000000000000_e856432f45a75bea_001"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"89f1000000000000_e856432f45a75bea_001"},"labelIds":{"type":"array","description":"List of label IDs of this message.","items":{"type":"string","description":"Label ID of the message.","example":"DRAFT"}}}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:update:draft","email:update:draft:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:update:draft","email:update:draft:admin"]}},"delete":{"tags":["Drafts"],"summary":"Delete an existing draft email","description":"Immediately and permanently deletes the specified draft.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:delete:draft`,`email:delete:draft:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"delete_draft_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"draftId","in":"path","description":"The immutable ID of the draft.","required":true,"schema":{"type":"string","example":"89f1000000000000_e856432f45a75bea_001"}}],"responses":{"204":{"description":"The specified draft email is deleted. "},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:delete:draft","email:delete:draft:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:delete:draft","email:delete:draft:admin"]}}},"/emails/mailboxes/{email}/history":{"get":{"tags":["History"],"summary":"List history of events for mailbox","description":"Lists the history of the changes to the given mailbox.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:history`,`email:read:history:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"list_mailbox_history","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"maxResults","in":"query","description":"Maximum number of history events to return. This field defaults to 50. The maximum allowed value is 500.","required":false,"schema":{"type":"integer","example":10}},{"name":"pageToken","in":"query","description":"The page token to retrieve a specific page of results in the list.","required":false,"schema":{"type":"string","example":"00000000000005e0"}},{"name":"startHistoryId","in":"query","description":"Returns history records after the specified `startHistoryId`. The supplied `startHistoryId` should be obtained from the `historyId` of a message, thread, or previous list response. History IDs increase chronologically but are not contiguous with random gaps in between. Supplying an invalid or out of date `startHistoryId` typically returns an HTTP 404 error code. A `historyId` is typically valid for at least a week, but in some rare circumstances may be valid for much shorter period. If you receive an HTTP 404 error response, your application should perform a full sync. If you receive no **nextPageToken** in the response, there are no updates to retrieve and you can store the returned `historyId` for a future request.","required":true,"schema":{"type":"string","example":"10"}},{"name":"historyTypes","in":"query","description":"History types to be returned by the function.  If one history type included in both query parameters``historyType`` and ``excludeHistoryType``, the exclude take the priority.","required":false,"schema":{"type":"string","example":"messagesAdded","enum":["labelAdded","labelRemoved","messageAdded","messageDeleted","messageUpdated","messageImported","messageImportedNew","settingAdded","settingUpdated","settingDeleted","delegateAdded","delegateDeleted","delegateUpdated","delegatorsAdded","delegatorsDeleted","delegatorsUpdated"]}},{"name":"excludeHistoryTypes","in":"query","description":"History types not to be returned by the function.  If one history type included in both query parameters ``historyTypes`` and ``excludeHistoryTypes``, the exclude take the priority.","required":false,"schema":{"type":"string","example":"labelsAdded","enum":["labelAdded","labelRemoved","messageAdded","messageDeleted","messageUpdated","messageImported","messageImportedNew","settingAdded","settingUpdated","settingDeleted","delegateAdded","delegateDeleted","delegateUpdated","delegatorsAdded","delegatorsDeleted","delegatorsUpdated"]}},{"name":"labelId","in":"query","description":"Only return messages with a label matching the ID.","required":false,"schema":{"type":"string","example":"INBOX"}}],"responses":{"200":{"description":"Lists of all the changes of the mailbox such as message append, label change, settings change, etc.  The changes are in chronical order (increase of the history ID).","content":{"application/json":{"schema":{"type":"object","properties":{"history":{"type":"array","description":"List of history records. Any messages contained in the response will typically only have ID and thread ID fields populated.","items":{"type":"object","properties":{"id":{"type":"string","description":"The mailbox history event sequence ID.","example":"1454"},"cid":{"type":"string","description":"Client ID which uniquely identifies a client (zoom.app)’s running session that initiated the change.","example":"b35d091400000000_12185"},"messagesAdded":{"type":"array","description":"History event indicate a message added to the mailbox.","items":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message ID. ","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the newly added message.","items":{"type":"string","description":"Label ID of the message","example":"INBOX"}},"threadId":{"type":"string","description":"Email thread ID.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"messagesDeleted":{"type":"array","description":"History event indicates message deleted (not Trashed) from the mailbox.","items":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message ID.","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the deleted message.","items":{"type":"string","description":"Label ID of the message.","example":"INBOX"}},"threadId":{"type":"string","description":"Email thread ID.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"messagesImported":{"type":"array","description":"History event indicates a message imported from the external source into this mailbox.","items":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message ID.","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the imported message.","items":{"type":"string","description":"Label ID of the message.","example":"INBOX"}},"threadId":{"type":"string","description":"Email thread ID.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"messagesImportedNew":{"type":"array","description":"History event indicates a message imported from the external source that was newly delivered since last round of import.","items":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message ID.","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the imported message.","items":{"type":"string","description":"Label ID of the message.","example":"INBOX"}},"threadId":{"type":"string","description":"Email thread ID.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"messagesUpdated":{"type":"array","description":"History event indicates an existing message that has been updated.","items":{"type":"object","properties":{"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message ID.","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the updated message.","items":{"type":"string","description":"Label ID of the message.","example":"INBOX"}},"threadId":{"type":"string","description":"Email thread ID.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"labelsAdded":{"type":"array","description":"History event indicates some labels are added to messages.","items":{"type":"object","properties":{"labelIds":{"type":"array","description":"Label IDs that being added to the messages","items":{"type":"string","description":"Label ID of the message.","example":"LABEL_1"}},"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message ID.","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the message.","items":{"type":"string","description":"Label ID of the message.","example":"LABEL_1"}},"threadId":{"type":"string","description":"Email thread ID.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"labelsRemoved":{"type":"array","description":"History event indicates some labels are removed from messages.","items":{"type":"object","properties":{"labelIds":{"type":"array","description":"List of label IDs that have been removed from the message.","items":{"type":"string","description":"Label ID of the message.","example":"LABEL_2"}},"message":{"type":"object","properties":{"id":{"type":"string","description":"Email message Id.","example":"b35d091400000000_e861880afaf26dc8_604"},"labelIds":{"type":"array","description":"Label IDs of the message.","items":{"type":"string","description":"Label ID of the message.","example":"INBOX"}},"threadId":{"type":"string","description":"Email thread Id.","example":"b35d091400000000_e862202d7e502e95_587"}},"description":"Email message that has been operated on."}}}},"settingsAdded":{"type":"array","description":"Newly added setting list in this history record.  Each enement contains a setting type, and that setting ID if applicable.  This type of history event is mainly for adding user labels, filter, etc.","items":{"type":"object","properties":{"id":{"type":"string","description":"ID of the changing setting if the setting is of mutlple entries type.","example":"Label_44"},"type":{"type":"string","description":"Type of changing setting.","example":"userLabels","enum":["userLabels","language","vacation","filter","signature","disposableEmails","emailTemplates","delegation","screening"]}},"description":"List of settings being added."}},"settingsDeleted":{"type":"array","description":"Deleted setting list in this history record.  Each enement contains a setting type, and that setting ID if applicable.  This type of history event is mainly for delete user labels, filters, etc.","items":{"type":"object","properties":{"id":{"type":"string","description":"ID of the changing setting if the setting is of mutlple entries type.","example":"Label_44"},"type":{"type":"string","description":"Type of changing setting.","example":"userLabels","enum":["userLabels","language","vacation","filter","signature","disposableEmails","emailTemplates","delegation","screening"]}}}},"settingsUpdated":{"type":"array","description":"Updated setting list in this history record.  Each enement contains a setting type, and a setting ID if applicable.","items":{"type":"object","properties":{"id":{"type":"string","description":"ID of the changing setting if the setting is of mutlple entries type.","example":"Label_44"},"type":{"type":"string","description":"Type of changing setting.","example":"userLabels","enum":["userLabels","language","vacation","filter","signature","disposableEmails","emailTemplates","delegation","screening"]}}}},"delegatesAdded":{"type":"array","description":"History event indicates mailbox access has been granted to these delegates.","items":{"type":"string","description":"Email address of the delegate that has been granted access","example":"john.doe@example.com"}},"delegatesDeleted":{"type":"array","description":"History event indicates mailbox access has been revoked from these delegates.","items":{"type":"string","description":"Email address of the delegate that has been revoked access.","example":"john.doe@example.com"}},"delegatesUpdated":{"type":"array","description":"History event indicates mailbox access level has been modified for these delegates.","items":{"type":"string","description":"Email address of the delegate that has access setting has been updated.","example":"john.doe@example.com"}},"delegatorsAdded":{"type":"array","description":"History event indicates user has been granted access to these delegators' mailboxes.","items":{"type":"string","description":"Email address of the delegator that this user has been granted access to.","example":"david.smith@example.com"}},"delegatorsDeleted":{"type":"array","description":"History event indicates user has been revoked access from these delegators' mailboxes.","items":{"type":"string","description":"Email address of the delegator that this user has been revoked access from.","example":"david.smith@example.com"}},"delegatorsUpdated":{"type":"array","description":"History event indicates user's delegate access level has been modified to these delegators' mailboxes.","items":{"type":"string","description":"Email address of the delegator that this user has been modified access.","example":"david.smith@example.com"}}},"description":"An instance of history object."}},"nextPageToken":{"type":"string","description":"The page token to retrieve the next page of results in the list.","example":"00000000000005b3"},"historyId":{"type":"string","description":"The ID of the mailbox's latest history event.","example":"1777"}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:history","email:read:history:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:history","email:read:history:admin"]}}},"/emails/mailboxes/{email}/labels":{"get":{"tags":["Labels"],"summary":"List labels in the mailbox","description":"Lists all labels in the mailbox.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:list_labels`,`email:read:list_labels:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"list_labels_in_mailbox","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"format","in":"query","description":"Enum value to control how much label information is returned.","required":false,"schema":{"type":"string","example":"basic","default":"full","enum":["full","basic","minimal"]}}],"responses":{"200":{"description":"Tthe response body contains all the labels' information in the mailbox. ","content":{"application/json":{"schema":{"type":"object","properties":{"labels":{"type":"array","description":"The list of labels in the mailbox.","items":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the label.","example":"Label_1"},"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"Parent label's ID.","example":"Label_0"},"labelLevel":{"type":"integer","description":"How many levels from top level label.","example":1},"messageListVisibility":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail client.","example":"labelShow","enum":["labelShowIfUnread","labelHide","labelShow"]},"messagesTotal":{"type":"integer","description":"The total number of messages with the label.","example":100},"messagesUnread":{"type":"integer","description":"The number of unread messages with the label.","example":98},"threadsTotal":{"type":"integer","description":"The total number of threads with the label.","example":80},"threadsUnread":{"type":"integer","description":"The number of unread threads with the label.","example":78},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string.","example":"#000000"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string.","example":"#cccccc"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."},"type":{"type":"string","description":"enum value of label type. ","example":"user","enum":["system","user"]}},"description":"One label object. "}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:list_labels","email:read:list_labels:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:list_labels","email:read:list_labels:admin"]}},"post":{"tags":["Labels"],"summary":"Create a new label in mailbox","description":"Creates a new label.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:label`,`email:write:label:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"create_label_in_mailbox","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of label object.","content":{"application/json":{"schema":{"required":["name","parentId"],"type":"object","properties":{"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"The parent label's ID.  For the top level label without parent, input an empty string.","example":"Label_1"},"messageListVisibilitystring":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail Client.","example":"labelShow","enum":["labelShow","labelHide","labelShowIfUnread"]},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string. The text color and background cololr must be set togther.  The allowed color sets are \"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#cccccc\", \"#efefef\", \"#f3f3f3\", \"#ffffff\", \"#fb4c2f\", \"#ffad47\", \"#fad165\", \"#16a766\", \"#43d692\", \"#4a86e8\", \"#a479e2\", \"#f691b3\", \"#f6c5be\", \"#ffe6c7\", \"#fef1d1\", \"#b9e4d0\", \"#c6f3de\", \"#c9daf8\", \"#e4d7f5\", \"#fcdee8\", \"#efa093\", \"#ffd6a2\", \"#fce8b3\", \"#89d3b2\", \"#a0eac9\", \"#a4c2f4\", \"#d0bcf1\", \"#fbc8d9\", \"#e66550\", \"#ffbc6b\", \"#fcda83\", \"#44b984\", \"#68dfa9\", \"#6d9eeb\", \"#b694e8\", \"#f7a7c0\", \"#cc3a21\", \"#eaa041\", \"#f2c960\", \"#149e60\", \"#3dc789\", \"#3c78d8\", \"#8e63ce\", \"#e07798\", \"#ac2b16\", \"#cf8933\", \"#d5ae49\", \"#0b804b\", \"#2a9c68\", \"#285bac\", \"#653e9b\", \"#b65775\", \"#822111\", \"#a46a21\", \"#aa8831\", \"#076239\", \"#1a764d\", \"#1c4587\", \"#41236d\", \"#83334c\", \"#464646\", \"#e7e7e7\", \"#0d3472\", \"#b6cff5\", \"#0d3b44\", \"#98d7e4\", \"#3d188e\", \"#e3d7ff\", \"#711a36\", \"#fbd3e0\", \"#8a1c0a\", \"#f2b2a8\", \"#7a2e0b\", \"#ffc8af\", \"#7a4706\", \"#ffdeb5\", \"#594c05\", \"#fbe983\", \"#684e07\", \"#fdedc1\", \"#0b4f30\", \"#b3efd3\", \"#04502e\", \"#a2dcc1\", \"#c2c2c2\", \"#4986e7\", \"#2da2bb\", \"#b99aff\", \"#994a64\", \"#f691b2\", \"#ff7537\", \"#ffad46\", \"#662e37\", \"#ebdbde\", \"#cca6ac\", \"#094228\", \"#42d692\", \"#16a765\"","example":"#666666"},"backgroundColor":{"type":"string","description":"The background color represented as hex string. The text color and background cololr must be set togther. The allowed color sets are \"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#cccccc\", \"#efefef\", \"#f3f3f3\", \"#ffffff\", \"#fb4c2f\", \"#ffad47\", \"#fad165\", \"#16a766\", \"#43d692\", \"#4a86e8\", \"#a479e2\", \"#f691b3\", \"#f6c5be\", \"#ffe6c7\", \"#fef1d1\", \"#b9e4d0\", \"#c6f3de\", \"#c9daf8\", \"#e4d7f5\", \"#fcdee8\", \"#efa093\", \"#ffd6a2\", \"#fce8b3\", \"#89d3b2\", \"#a0eac9\", \"#a4c2f4\", \"#d0bcf1\", \"#fbc8d9\", \"#e66550\", \"#ffbc6b\", \"#fcda83\", \"#44b984\", \"#68dfa9\", \"#6d9eeb\", \"#b694e8\", \"#f7a7c0\", \"#cc3a21\", \"#eaa041\", \"#f2c960\", \"#149e60\", \"#3dc789\", \"#3c78d8\", \"#8e63ce\", \"#e07798\", \"#ac2b16\", \"#cf8933\", \"#d5ae49\", \"#0b804b\", \"#2a9c68\", \"#285bac\", \"#653e9b\", \"#b65775\", \"#822111\", \"#a46a21\", \"#aa8831\", \"#076239\", \"#1a764d\", \"#1c4587\", \"#41236d\", \"#83334c\", \"#464646\", \"#e7e7e7\", \"#0d3472\", \"#b6cff5\", \"#0d3b44\", \"#98d7e4\", \"#3d188e\", \"#e3d7ff\", \"#711a36\", \"#fbd3e0\", \"#8a1c0a\", \"#f2b2a8\", \"#7a2e0b\", \"#ffc8af\", \"#7a4706\", \"#ffdeb5\", \"#594c05\", \"#fbe983\", \"#684e07\", \"#fdedc1\", \"#0b4f30\", \"#b3efd3\", \"#04502e\", \"#a2dcc1\", \"#c2c2c2\", \"#4986e7\", \"#2da2bb\", \"#b99aff\", \"#994a64\", \"#f691b2\", \"#ff7537\", \"#ffad46\", \"#662e37\", \"#ebdbde\", \"#cca6ac\", \"#094228\", \"#42d692\", \"#16a765\"","example":"#999999"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."}},"description":"The request body contains an instance of label."}}}},"responses":{"200":{"description":"If successful, the response body contains a newly created instance of label object.","content":{"application/json":{"schema":{"required":["name","parentId"],"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the label.","example":"Label_10"},"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"The parent label's ID.","example":"Label_0"},"labelLevel":{"type":"integer","description":"How many levels from top level label.","example":2},"messageListVisibilitystring":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail Client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail Client.","example":"labelShow","enum":["labelShow","labelShowIfUnread","labelHide"]},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string.","example":"#000000"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string.","example":"#cccccc"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"409":{"description":"**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n Conflict Operation. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:label","email:write:label:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:label","email:write:label:admin"]}}},"/emails/mailboxes/{email}/labels/{labelId}":{"get":{"tags":["Labels"],"summary":"Get the specified label in mailbox","description":"Retrieves the specified label.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:label`,`email:read:label:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_label_in_mailbox","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"labelId","in":"path","description":"The ID of the label to retrieve.","required":true,"schema":{"type":"string","example":"INBOX"}}],"responses":{"200":{"description":"The response body contains an instance of label object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the label.","example":"Label_12"},"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"The parent label's ID. ","example":"Label_1"},"labelLevel":{"type":"integer","description":"How many levels from top level label.","example":2},"messageListVisibility":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail Client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail Client.","example":"labelShow","enum":["labelShow","labelShowIfUnread","labelHide"]},"messagesTotal":{"type":"integer","description":"The total number of messages with the label.","example":100},"messagesUnread":{"type":"integer","description":"The number of unread messages with the label.","example":98},"threadsTotal":{"type":"integer","description":"The total number of threads with the label.","example":80},"threadsUnread":{"type":"integer","description":"The number of unread threads with the label.","example":78},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string.","example":"#000000"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string.","example":"#cccccc"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."},"type":{"type":"string","description":"Enum value of label type.","example":"user","enum":["system","user"]}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `401` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:label","email:read:label:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:label","email:read:label:admin"]}},"put":{"tags":["Labels"],"summary":"Update the specified label in mailbox","description":"Updates the specified label.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:update:label`,`email:update:label:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"update_label_in_mailbox","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"labelId","in":"path","description":"The ID of the label to update.","required":true,"schema":{"type":"string","example":"Label_12"}}],"requestBody":{"description":"The instance of label to update.","content":{"application/json":{"schema":{"required":["name","parentld"],"type":"object","properties":{"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentld":{"type":"string","description":"The parent label's ID.","example":"Label_1"},"messageListVisibilitystring":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail Client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail Client.","example":"labelShow","enum":["labelShow","labelHide","labelShowIfUnread"]},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string. The text color and background cololr must be set togther. The allowed color sets are \"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#cccccc\", \"#efefef\", \"#f3f3f3\", \"#ffffff\", \"#fb4c2f\", \"#ffad47\", \"#fad165\", \"#16a766\", \"#43d692\", \"#4a86e8\", \"#a479e2\", \"#f691b3\", \"#f6c5be\", \"#ffe6c7\", \"#fef1d1\", \"#b9e4d0\", \"#c6f3de\", \"#c9daf8\", \"#e4d7f5\", \"#fcdee8\", \"#efa093\", \"#ffd6a2\", \"#fce8b3\", \"#89d3b2\", \"#a0eac9\", \"#a4c2f4\", \"#d0bcf1\", \"#fbc8d9\", \"#e66550\", \"#ffbc6b\", \"#fcda83\", \"#44b984\", \"#68dfa9\", \"#6d9eeb\", \"#b694e8\", \"#f7a7c0\", \"#cc3a21\", \"#eaa041\", \"#f2c960\", \"#149e60\", \"#3dc789\", \"#3c78d8\", \"#8e63ce\", \"#e07798\", \"#ac2b16\", \"#cf8933\", \"#d5ae49\", \"#0b804b\", \"#2a9c68\", \"#285bac\", \"#653e9b\", \"#b65775\", \"#822111\", \"#a46a21\", \"#aa8831\", \"#076239\", \"#1a764d\", \"#1c4587\", \"#41236d\", \"#83334c\", \"#464646\", \"#e7e7e7\", \"#0d3472\", \"#b6cff5\", \"#0d3b44\", \"#98d7e4\", \"#3d188e\", \"#e3d7ff\", \"#711a36\", \"#fbd3e0\", \"#8a1c0a\", \"#f2b2a8\", \"#7a2e0b\", \"#ffc8af\", \"#7a4706\", \"#ffdeb5\", \"#594c05\", \"#fbe983\", \"#684e07\", \"#fdedc1\", \"#0b4f30\", \"#b3efd3\", \"#04502e\", \"#a2dcc1\", \"#c2c2c2\", \"#4986e7\", \"#2da2bb\", \"#b99aff\", \"#994a64\", \"#f691b2\", \"#ff7537\", \"#ffad46\", \"#662e37\", \"#ebdbde\", \"#cca6ac\", \"#094228\", \"#42d692\", \"#16a765\"","example":"#666666"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string. The text color and background cololr must be set togther. The allowed color sets are \"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#cccccc\", \"#efefef\", \"#f3f3f3\", \"#ffffff\", \"#fb4c2f\", \"#ffad47\", \"#fad165\", \"#16a766\", \"#43d692\", \"#4a86e8\", \"#a479e2\", \"#f691b3\", \"#f6c5be\", \"#ffe6c7\", \"#fef1d1\", \"#b9e4d0\", \"#c6f3de\", \"#c9daf8\", \"#e4d7f5\", \"#fcdee8\", \"#efa093\", \"#ffd6a2\", \"#fce8b3\", \"#89d3b2\", \"#a0eac9\", \"#a4c2f4\", \"#d0bcf1\", \"#fbc8d9\", \"#e66550\", \"#ffbc6b\", \"#fcda83\", \"#44b984\", \"#68dfa9\", \"#6d9eeb\", \"#b694e8\", \"#f7a7c0\", \"#cc3a21\", \"#eaa041\", \"#f2c960\", \"#149e60\", \"#3dc789\", \"#3c78d8\", \"#8e63ce\", \"#e07798\", \"#ac2b16\", \"#cf8933\", \"#d5ae49\", \"#0b804b\", \"#2a9c68\", \"#285bac\", \"#653e9b\", \"#b65775\", \"#822111\", \"#a46a21\", \"#aa8831\", \"#076239\", \"#1a764d\", \"#1c4587\", \"#41236d\", \"#83334c\", \"#464646\", \"#e7e7e7\", \"#0d3472\", \"#b6cff5\", \"#0d3b44\", \"#98d7e4\", \"#3d188e\", \"#e3d7ff\", \"#711a36\", \"#fbd3e0\", \"#8a1c0a\", \"#f2b2a8\", \"#7a2e0b\", \"#ffc8af\", \"#7a4706\", \"#ffdeb5\", \"#594c05\", \"#fbe983\", \"#684e07\", \"#fdedc1\", \"#0b4f30\", \"#b3efd3\", \"#04502e\", \"#a2dcc1\", \"#c2c2c2\", \"#4986e7\", \"#2da2bb\", \"#b99aff\", \"#994a64\", \"#f691b2\", \"#ff7537\", \"#ffad46\", \"#662e37\", \"#ebdbde\", \"#cca6ac\", \"#094228\", \"#42d692\", \"#16a765\"","example":"#999999"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."}},"description":"The request body contains an instance of label."}}}},"responses":{"200":{"description":"The response body contains an instance of label object.","content":{"application/json":{"schema":{"required":["name","parentId"],"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the label.","example":"Label_12"},"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"The parent label's ID. ","example":"Label_1"},"labelLevel":{"type":"integer","description":"How many levels from top level label.","example":2},"messageListVisibility":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail Client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail Client.","example":"labelShow","enum":["labelShow","labelShowIfUnread","labelHide"]},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string.","example":"#000000"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string.","example":"#cccccc"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:update:label","email:update:label:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:update:label","email:update:label:admin"]}},"delete":{"tags":["Labels"],"summary":"Delete an existing label from mailbox","description":"Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:delete:label`,`email:delete:label:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"delete_label_from_mailbox","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"labelId","in":"path","description":"The ID of the label to delete.","required":true,"schema":{"type":"string","example":"Label_1"}}],"responses":{"204":{"description":"The specified label is deleted."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:delete:label","email:delete:label:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:delete:label","email:delete:label:admin"]}},"patch":{"tags":["Labels"],"summary":"Patch the specified label in mailbox","description":"Patch the specified label.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:update:label`,`email:update:label:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"patch_label_in_mailbox","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"labelId","in":"path","description":"The ID of the label to patch.","required":true,"schema":{"type":"string","example":"Label_1"}}],"requestBody":{"description":"The instance of label to patch. ","content":{"application/json":{"schema":{"required":["name","parentId"],"type":"object","properties":{"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"Parent label's ID.","example":"Label_1"},"messageListVisibilitystring":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail Client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail Client.","example":"labelShow","enum":["labelShow","labelHide","labelShowIfUnread"]},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string. The text color and background cololr must be set togther. The allowed color sets are \"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#cccccc\", \"#efefef\", \"#f3f3f3\", \"#ffffff\", \"#fb4c2f\", \"#ffad47\", \"#fad165\", \"#16a766\", \"#43d692\", \"#4a86e8\", \"#a479e2\", \"#f691b3\", \"#f6c5be\", \"#ffe6c7\", \"#fef1d1\", \"#b9e4d0\", \"#c6f3de\", \"#c9daf8\", \"#e4d7f5\", \"#fcdee8\", \"#efa093\", \"#ffd6a2\", \"#fce8b3\", \"#89d3b2\", \"#a0eac9\", \"#a4c2f4\", \"#d0bcf1\", \"#fbc8d9\", \"#e66550\", \"#ffbc6b\", \"#fcda83\", \"#44b984\", \"#68dfa9\", \"#6d9eeb\", \"#b694e8\", \"#f7a7c0\", \"#cc3a21\", \"#eaa041\", \"#f2c960\", \"#149e60\", \"#3dc789\", \"#3c78d8\", \"#8e63ce\", \"#e07798\", \"#ac2b16\", \"#cf8933\", \"#d5ae49\", \"#0b804b\", \"#2a9c68\", \"#285bac\", \"#653e9b\", \"#b65775\", \"#822111\", \"#a46a21\", \"#aa8831\", \"#076239\", \"#1a764d\", \"#1c4587\", \"#41236d\", \"#83334c\", \"#464646\", \"#e7e7e7\", \"#0d3472\", \"#b6cff5\", \"#0d3b44\", \"#98d7e4\", \"#3d188e\", \"#e3d7ff\", \"#711a36\", \"#fbd3e0\", \"#8a1c0a\", \"#f2b2a8\", \"#7a2e0b\", \"#ffc8af\", \"#7a4706\", \"#ffdeb5\", \"#594c05\", \"#fbe983\", \"#684e07\", \"#fdedc1\", \"#0b4f30\", \"#b3efd3\", \"#04502e\", \"#a2dcc1\", \"#c2c2c2\", \"#4986e7\", \"#2da2bb\", \"#b99aff\", \"#994a64\", \"#f691b2\", \"#ff7537\", \"#ffad46\", \"#662e37\", \"#ebdbde\", \"#cca6ac\", \"#094228\", \"#42d692\", \"#16a765\"","example":"#666666"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string. The text color and background cololr must be set togther. The allowed color sets are \"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#cccccc\", \"#efefef\", \"#f3f3f3\", \"#ffffff\", \"#fb4c2f\", \"#ffad47\", \"#fad165\", \"#16a766\", \"#43d692\", \"#4a86e8\", \"#a479e2\", \"#f691b3\", \"#f6c5be\", \"#ffe6c7\", \"#fef1d1\", \"#b9e4d0\", \"#c6f3de\", \"#c9daf8\", \"#e4d7f5\", \"#fcdee8\", \"#efa093\", \"#ffd6a2\", \"#fce8b3\", \"#89d3b2\", \"#a0eac9\", \"#a4c2f4\", \"#d0bcf1\", \"#fbc8d9\", \"#e66550\", \"#ffbc6b\", \"#fcda83\", \"#44b984\", \"#68dfa9\", \"#6d9eeb\", \"#b694e8\", \"#f7a7c0\", \"#cc3a21\", \"#eaa041\", \"#f2c960\", \"#149e60\", \"#3dc789\", \"#3c78d8\", \"#8e63ce\", \"#e07798\", \"#ac2b16\", \"#cf8933\", \"#d5ae49\", \"#0b804b\", \"#2a9c68\", \"#285bac\", \"#653e9b\", \"#b65775\", \"#822111\", \"#a46a21\", \"#aa8831\", \"#076239\", \"#1a764d\", \"#1c4587\", \"#41236d\", \"#83334c\", \"#464646\", \"#e7e7e7\", \"#0d3472\", \"#b6cff5\", \"#0d3b44\", \"#98d7e4\", \"#3d188e\", \"#e3d7ff\", \"#711a36\", \"#fbd3e0\", \"#8a1c0a\", \"#f2b2a8\", \"#7a2e0b\", \"#ffc8af\", \"#7a4706\", \"#ffdeb5\", \"#594c05\", \"#fbe983\", \"#684e07\", \"#fdedc1\", \"#0b4f30\", \"#b3efd3\", \"#04502e\", \"#a2dcc1\", \"#c2c2c2\", \"#4986e7\", \"#2da2bb\", \"#b99aff\", \"#994a64\", \"#f691b2\", \"#ff7537\", \"#ffad46\", \"#662e37\", \"#ebdbde\", \"#cca6ac\", \"#094228\", \"#42d692\", \"#16a765\"","example":"#999999"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."}},"description":"The request body contains an instance of label."}}}},"responses":{"200":{"description":"The response body contains an instance of label object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the label.","example":"Label_12"},"name":{"type":"string","description":"The display name of the label.","example":"MyVacation"},"parentId":{"type":"string","description":"The parent label's ID. ","example":"Label_1"},"labelLevel":{"type":"integer","description":"How many levels from top level label.","example":2},"messageListVisibility":{"type":"string","description":"The visibility of messages with this label in the message list in the Zoom Mail client.","example":"show","enum":["show","hide"]},"labelListVisibility":{"type":"string","description":"The visibility of the label in the label list in the Zoom Mail client.","example":"labelShow","enum":["labelShow","labelShowIfUnread","labelHide"]},"color":{"type":"object","properties":{"textColor":{"type":"string","description":"The text color of the label, represented as hex string.","example":"#000000"},"backgroundColor":{"type":"string","description":"The background color of the label, represented as hex string.","example":"#cccccc"}},"description":"The color to assign to the label. Color is only available for \"user\" type of labels."}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:update:label","email:update:label:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:update:label","email:update:label:admin"]}}},"/emails/mailboxes/{email}/profile":{"get":{"tags":["Mailbox"],"summary":"Get the mailbox profile","description":"Get the mailbox profile.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:profile`,`email:read:profile:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_mailbox_profile","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"responses":{"200":{"description":"The response body contains an instance of mailbox profile.","content":{"application/json":{"schema":{"type":"object","properties":{"emailAddress":{"type":"string","description":"The mailbox's address.","example":"john.doe@example.com"},"groupEmails":{"type":"array","description":" Mail distribution list that this email address belongs to.","items":{"type":"string","description":"Group email address.","example":"sales@example.com"}},"createTime":{"type":"integer","description":"Mailbox creation timestamp (epoch seconds).","example":1705972326},"status":{"type":"string","description":"Enumerable represents current mailbox status.","example":"active","enum":["active","readOnly","inactive","deactivated","suspended","softDeleted","purging","preProvision"]},"mboxSize":{"type":"number","description":"Current mailbox size in bytes.","example":282554},"messagesTotal":{"type":"integer","description":"Total email message count in the mailbox.","example":4588},"threadsTotal":{"type":"integer","description":"Total thread count in the mailbox.","example":4523},"encryptionEnabled":{"type":"boolean","description":"Whether the emails are E2EE encrypted by default.","example":false},"labelEncryptionEnabled":{"type":"boolean","description":"Whether the labels are E2EE encrypted by default.","example":false},"historyId":{"type":"string","description":"The ID of the last history event that modified this mailbox.","example":"10"}}}}}},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:profile","email:read:profile:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:profile","email:read:profile:admin"]}}},"/emails/mailboxes/{email}/messages":{"get":{"tags":["Messages"],"summary":"List emails from the mailbox","description":"Lists the messages in the user's mailbox.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:list_msgs`,`email:read:list_msgs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"list_emails","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"maxResults","in":"query","description":"Maximum number of messages to return. This field defaults to 50. The maximum allowed value for this field is 500.","required":false,"schema":{"type":"string","example":"20"}},{"name":"pageToken","in":"query","description":"Page token to retrieve a specific page of results in the list.","required":false,"schema":{"type":"string","example":"e8580fc3bd75077c"}},{"name":"labelIds","in":"query","description":"Only return messages with labels that match all of the specified label IDs in this query parameter.","required":false,"schema":{"type":"string","example":"INBOX"}},{"name":"q","in":"query","description":"Only return messages matching the specified elastic search query.","required":false,"schema":{"type":"string","example":"from:someuser@example.com is:unread"}},{"name":"includeSpamTrash","in":"query","description":"Whether to include messages from SPAM and TRASH in the results.","required":false,"schema":{"type":"boolean","example":true}}],"responses":{"200":{"description":"The response body contains list of message objects.","content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","description":"List of messages that matching selecting critiera.","items":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"7d4d447700000000_e85f09d67065eb70_121"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"7d4d447700000000_e85f09d67065eb70_121"}},"description":"A message instance."}},"nextPageToken":{"type":"string","description":"Page token to retrieve the next page of results in the list.","example":"e85f09d67065eb70"},"resultSizeEstimate":{"type":"integer","description":"Estimated number of results in the response."}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:list_msgs","email:read:list_msgs:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:list_msgs","email:read:list_msgs:admin"]}},"post":{"tags":["Messages"],"summary":"Create a new email","description":"Directly inserts a message into this mailbox. \n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:msg`,`email:write:msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"create_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"deleted","in":"query","description":"Mark the inserting email directly as TRASH if this query parameter is set to true.","required":false,"schema":{"type":"boolean","example":true}}],"requestBody":{"description":"The request body contains an instance of message.","content":{"application/json":{"schema":{"required":["raw"],"type":"object","properties":{"labelIds":{"type":"array","description":"List of label IDs to set on the inserting message.","items":{"type":"string","description":"A label ID to set on the message.","example":"IMPORTANT"}},"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string.","example":"RnJvbTogeGlhb2JvLmxpQHpvb21kZXYudXMKVG86IG1ham9yZG9tb0B2Z2VyLmtlcm5lbC5vcmcKU3ViamVjdDogYXV0aCA3MjM3MTA0YSBzdWJzY3JpYmUgbGludXgta2VybmVsIHhpYW9iby5saUB6b29tZGV2LnVzCgphdXRoIDcyMzcxMDRhIHN1YnNjcmliZSBsaW51eC1rZXJuZWwgeGlhb2JvLmxpQHpvb21kZXYudXMK"}}}}}},"responses":{"200":{"description":"The request body contains an instance of message object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The message ID of the inserted message.","example":"4a1fca9500000000_e856054c90f10a86_940"},"threadId":{"type":"string","description":"The thread ID of the inserted message.","example":"4a1fca9500000000_e856054c90f10a86_940"},"labelIds":{"type":"array","description":"List of label IDs of the message inserted.","items":{"type":"string","description":"A label ID of the inserted message.","example":"INBOX"}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:msg","email:write:msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:msg","email:write:msg:admin"]}}},"/emails/mailboxes/{email}/messages/batchDelete":{"post":{"tags":["Messages"],"summary":"Batch delete the specified emails","description":"Delete multiple messages specified in request body.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:batch_delete_msgs`,`email:write:batch_delete_msgs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"batch_delete_emails","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains a list of message IDs to delete.","content":{"application/json":{"schema":{"required":["ids"],"type":"object","properties":{"ids":{"type":"array","description":"List of message IDs to delete.","items":{"type":"string","description":"Message ID to delete.","example":"7d4d447700000000_e85f09d67065eb70_121"}}}}}}},"responses":{"204":{"description":"The specified messages are all deleted."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:batch_delete_msgs","email:write:batch_delete_msgs:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:batch_delete_msgs","email:write:batch_delete_msgs:admin"]}}},"/emails/mailboxes/{email}/messages/batchModify":{"post":{"tags":["Messages"],"summary":"Batch modify the specified emails","description":"Modifies the labels on the specified messages.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:batch_modify_msgs`,`email:write:batch_modify_msgs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`\n\n**Not supported in Gov cluster** ","operationId":"batch_modify_emails","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains the label changes for the specified messages","content":{"application/json":{"schema":{"required":["ids"],"type":"object","properties":{"ids":{"type":"array","description":"List of message IDs to modify.","items":{"type":"string","description":"Message ID to delete.","example":"7d4d447700000000_e85f09d67065eb70_121"}},"addLabelIds":{"type":"array","description":"List of label IDs to add on the messages.","items":{"type":"string","description":"Label ID to add.","example":"IMPORTANT"}},"removeLabelIds":{"type":"array","description":"List of label IDs to remove from the messages.","items":{"type":"string","description":"Label ID to remove.","example":"TRASH"}}},"description":"Requires at least one of the \"addLabelIds\" or \"removeLabelIds\" field exist."}}}},"responses":{"204":{"description":"The specified messages are all modified."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:batch_modify_msgs","email:write:batch_modify_msgs:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:batch_modify_msgs","email:write:batch_modify_msgs:admin"]}}},"/emails/mailboxes/{email}/messages/send":{"post":{"tags":["Messages"],"summary":"Send out an email","description":"Sends the specified message to the recipients as specified in the email.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:send_msg`,`email:write:send_msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"send_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"jane.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of message.","content":{"application/json":{"schema":{"required":["raw"],"type":"object","properties":{"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string.","example":"RnJvbTogeGlhb2JvLmxpQHpvb21kZXYudXMKVG86IG1ham9yZG9tb0B2Z2VyLmtlcm5lbC5vcmcKU3ViamVjdDogYXV0aCA3MjM3MTA0YSBzdWJzY3JpYmUgbGludXgta2VybmVsIHhpYW9iby5saUB6b29tZGV2LnVzCgphdXRoIDcyMzcxMDRhIHN1YnNjcmliZSBsaW51eC1rZXJuZWwgeGlhb2JvLmxpQHpvb21kZXYudXMK"},"labelIds":{"type":"array","description":"List of label IDs to be applied on the message sent copy in the sender's mailbox.","items":{"type":"string","description":"Label ID to be applied on the message.","example":"IMPORTANT"}},"sendTime":{"type":"string","description":"Schedule the message to be sent at this specified time (epoch seconds). ","example":"1706669356"}}}}}},"responses":{"200":{"description":"The response body contains an instance of message object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The message ID of the sent message.","example":"4a1fca9500000000_e856054c90f10a86_940"},"threadId":{"type":"string","description":"The thread ID of the sent message.","example":"4a1fca9500000000_e856054c90f10a86_940"},"labelIds":{"type":"array","description":"The label IDs of the sent message.","items":{"type":"string","description":"A label ID of the sent message.","example":"SCHEDULED"}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:send_msg","email:write:send_msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:send_msg","email:write:send_msg:admin"]}}},"/emails/mailboxes/{email}/messages/{messageId}":{"get":{"tags":["Messages"],"summary":"Get the specified email","description":"Retrieves the specified message.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:msg`,`email:read:msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"messageId","in":"path","description":"The ID of the message to retrieve.","required":true,"schema":{"type":"string","example":"89f1000000000000_e856432f45a75bea_001"}},{"name":"format","in":"query","description":"The format to return the message with.","required":false,"schema":{"type":"string","example":"full","enum":["full","minimal","metadata","raw"]}},{"name":"metadataHeaders","in":"query","description":"When requested format is metadata, only include headers specified in this query parameter.","required":false,"schema":{"type":"string","example":"From"}}],"responses":{"200":{"description":"The response body contains an instance of message object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"7d4d447700000000_e85f09d67065eb70_121"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"7d4d447700000000_e85f09d67065eb70_121"},"labelIds":{"type":"array","description":"List of label IDs applied to this message.","items":{"type":"string","description":"Label ID of the message.","example":"INBOX"}},"snippet":{"type":"string","description":"A preview part of the message text.","example":"Email text here"},"historyId":{"type":"string","description":"The ID of the last history event that modified this message.","example":"5153"},"internalDate":{"type":"string","description":"The internal message creation timestamp (epoch milliseconds), which determines message order in the folder. For normal SMTP-received email, this represents the time the message was originally accepted by Zoom Mail server.","example":"1702631317509"},"expiration":{"type":"string","description":"The timestamp (epoch milliseconds) at which the message is considered expired and can be removed from mailbox.","example":"0"},"lastMoved":{"type":"string","description":"The timestamp (epoch milliseconds) for the last time the message had a label change.","example":"1702866810000"},"sendTime":{"type":"string","description":"The desired send time (epoch milliseconds) for a DRAFT or SCHEDULED message.","example":"1704828847000"},"userScheduled":{"type":"boolean","description":"A boolean value indicating if this message is scheduled by user or system.","example":true},"manifest":{"type":"string","description":"A string blob in the manifest portion of an encrypted email used for decryption. This is only valid for encrypted messages.","example":"CBYyJAoiAQPOyzaErnwrX3l7Bj2vLxj7uXgqVFxRpmKcR_wMqEFGdjq1AQqy"},"originalMime":{"type":"string","description":"A string representing the encrypted text portion of the email.  This is only valid for encrypted messages.","example":"WCzXU_IiB8DCVzh3_4ORekQuQYDHy2KNn9C_CY4H3gjtv0E74x03Ty"},"payload":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"1.1"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"text/html"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"cats.jpg"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"To"},"value":{"type":"string","description":"The value of the MIME email header.","example":"john.doe@example.com"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_1"},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":5434},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":"dGhpcyBsaW5lIHVzZXMgbWFpbCBtZXJnZSBAZmlyc3RuYW1lCnRoaXMgbGluZSBkb2VzIG5vdCB1c2UgbWFpbCBtZXJnZSBAZmlyc3RuYW1lCg=="}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"multipart/alternative"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Type"},"value":{"type":"string","description":"The value of the MIME email header.","example":"multipart/ALTERNATIVE"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_1"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":""},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":0}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0.0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"text/plain"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo1.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Type"},"value":{"type":"string","description":"The value of the MIME email header.","example":"text/PLAIN"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_2"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":"W2ltYWdlOiBTY3JlZW5zaG90IDIwMjQtMDItMDQgYXQgMTAuMjIuMDjigK9QTS5wbmddCgpXaWxsIHRoaXMgZ2VuZXJhdGUgbXVsdGlwbGUgcGFydD8K"},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":87}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0.0.0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"multipart/related"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo2.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Transfer-Encoding"},"value":{"type":"string","description":"The value of the MIME email header.","example":"7bit"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_3"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":""},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":0}},"description":"The message part body for this part, which may be empty for container MIME message parts."}}}}},"description":"An instance of MessagePart object."}}},"description":"An instance of MessagePart object."}}},"description":"Payload is of a MIME MessagePart format."},"sizeEstimate":{"type":"integer","description":"Size of the email in bytes.","example":25201},"raw":{"type":"string","description":"The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in get API when the format=RAW parameter is supplied.","example":"VG86IGpvaG5AZXhhbXBsZS5jb20KRnJvbTogamFuZUBleGFtcGxlLmNvbQoKaGVsbG8="}}}}}},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:msg","email:read:msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:msg","email:read:msg:admin"]}},"delete":{"tags":["Messages"],"summary":"Delete an existing email","description":"Immediately and permanently deletes the specified message. \n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:delete:msg`,`email:delete:msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"delete_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"messageId","in":"path","description":"The ID of the message to delete.","required":true,"schema":{"type":"string","example":"89f1000000000000_e856432f45a75bea_001"}}],"responses":{"204":{"description":"The specified email is deleted."},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:delete:msg","email:delete:msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:delete:msg","email:delete:msg:admin"]}}},"/emails/mailboxes/{email}/messages/{messageId}/modify":{"post":{"tags":["Messages"],"summary":"Update the specified email","description":"Modifies the labels on the specified message.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:modify_msg`,`email:write:modify_msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"update_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"messageId","in":"path","description":"The ID of the message to modify.","required":true,"schema":{"type":"string","example":"7d4d447700000000_e85f09d67065eb70_121"}}],"requestBody":{"description":"The request body contains the changing labels for the message.","content":{"application/json":{"schema":{"type":"object","properties":{"addLabelIds":{"type":"array","description":"List of the label IDs to add to the message.","items":{"type":"string","description":"A label ID to add to the message.","example":"TRASH"}},"removeLabelIds":{"type":"array","description":"List of the label IDs to be removed from the message.","items":{"type":"string","description":"A label ID to remove from the message.","example":"SPAM"}}},"description":"Requires at least one of the \"addLabelIds\" or \"removeLabelIds\" field exist."}}}},"responses":{"200":{"description":"The response body contains an instance of message object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"7d4d447700000000_e85f09d67065eb70_121"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"7d4d447700000000_e85f09d67065eb70_121"},"labelIds":{"type":"array","description":"List of IDs of labels applied to this message.","items":{"type":"string","description":"A label ID of the message.","example":"TRASH"}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:modify_msg","email:write:modify_msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:modify_msg","email:write:modify_msg:admin"]}}},"/emails/mailboxes/{email}/messages/{messageId}/trash":{"post":{"tags":["Messages"],"summary":"Move the specified email to TRASH folder","description":"Moves the specified message to the TRASH folder.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:trash_msg`,`email:write:trash_msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"trash_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","description":"The user's email address, or special value \"me\" to indicate the authenticated user from the access token.","example":"john.doe@example.com"}},{"name":"messageId","in":"path","description":"The ID of the message to trash.","required":true,"schema":{"type":"string","description":"The ID of the message to trash.","example":"7d4d447700000000_e85f09d67065eb70_121"}}],"responses":{"200":{"description":"The response body contains an instance of message object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The message ID being trashed.","example":"4a1fca9500000000_e85651412799fc3d_934"},"threadId":{"type":"string","description":"The thread ID of the message being trashed.","example":"4a1fca9500000000_e85651412799fc3d_934"},"labelIds":{"type":"array","description":"List of label IDs of the message.","items":{"type":"string","description":"A label ID of the message.","example":"TRASH"}}}}}}},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:trash_msg","email:write:trash_msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:trash_msg","email:write:trash_msg:admin"]}}},"/emails/mailboxes/{email}/messages/{messageId}/untrash":{"post":{"tags":["Messages"],"summary":"Move the specified email out of TRASH folder","description":"Move a message out of TRASH folder.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:untrash_msg`,`email:write:untrash_msg:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"untrash_email","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"messageId","in":"path","description":"The ID of the message to untrash.","required":true,"schema":{"type":"string","example":"7d4d447700000000_e85f09d67065eb70_121"}}],"responses":{"200":{"description":"The response body contains an instance of message object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The message ID being untrashed.","example":"4a1fca9500000000_e85651412799fc3d_934"},"threadId":{"type":"string","description":"The thread ID of the message being untrashed.","example":"4a1fca9500000000_e85651412799fc3d_934"},"labelIds":{"type":"array","description":"List of label IDs of the message.","items":{"type":"string","description":"A label ID of the message. ","example":"INBOX"}}}}}}},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:untrash_msg","email:write:untrash_msg:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:untrash_msg","email:write:untrash_msg:admin"]}}},"/emails/mailboxes/{email}/messages/{messageId}/attachments/{attachmentId}":{"get":{"tags":["Messages.Attachments"],"summary":"Get the specified attachment for an email","description":"Retrieves the specified message attachment.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:attachment`,`email:read:attachment:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"get_email_attachment","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"messageId","in":"path","description":"The ID of the message to retrieve attachment from.","required":true,"schema":{"type":"string","example":"7d4d447700000000_e85f09d67065eb70_121"}},{"name":"attachmentId","in":"path","description":"The ID of the attachment to retrieve.","required":true,"schema":{"type":"string","example":"7d4d447700000000_e85f09d67065eb70_121_2"}}],"responses":{"200":{"description":"If successful, the response body contains an instance of message part body object.","content":{"application/json":{"schema":{"type":"object","properties":{"attachmentId":{"type":"string","description":"The immutable ID of the message attachment.","example":"6ddf401500000000_e855d2b4b6d35377_010_1"},"size":{"type":"integer","description":"The number of bytes for the message attachment.","example":40270},"data":{"type":"string","description":"The message attachment as the MIME message part as a base64url encoded string. ","example":"YSBzbWFsbCB0ZXN0IHN0cmluZyBmb3IgYmFzZTY0IHVybCBlbmNvZGU="}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `403` <br>\n Forbidden Operation <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"409":{"description":"**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n Conflict Operation <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:attachment","email:read:attachment:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:attachment","email:read:attachment:admin"]}}},"/emails/mailboxes/{email}/settings/vacation":{"get":{"tags":["Settings"],"summary":"Get mailbox vacation response setting","description":"Gets vacation respondes settings.\n\n**Scopes:** `mail:read`\n\n**Granular Scopes:** `email:read:setting_vacation`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_mail_vacation_response_setting","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"responses":{"200":{"description":"The response body contains an instance of vacation setting object.","content":{"application/json":{"schema":{"type":"object","properties":{"enableAutoReply":{"type":"boolean","description":"Flag that controls whether mailbox automatically replies with vacation response.","example":false},"responseSubject":{"type":"string","description":"Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must exist.","example":"Example Response Subject"},"responseBodyPlainText":{"type":"string","description":"Response body in plain text format. If both responseBodyPlainText and responseBodyHtml are specified, responseBodyHtml will be used.","example":"Example Response Body Plain Text"},"responseBodyHtml":{"type":"string","description":"Response body in HTML format. Server will sanitize the HTML before storing it. If both responseBodyPlainText and responseBodyHtml are specified, responseBodyHtml will be used.","example":"Example Response Body Html"},"enableAlwaysRespond":{"type":"boolean","description":"Flag that determines whether vacation responses are repeatedly sent to the same sender. If enableAlwaysRespond is false, the response will be sent to the same sender once every four days.","example":false},"restrictToContacts":{"type":"boolean","description":"Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.","example":false},"restrictToDomain":{"type":"boolean","description":"Flag that determines whether responses are sent to recipients who are outside of the user's domain.","example":true},"startTime":{"type":"string","description":"An optional start time for sending auto-replies (epoch ms). When this is specified, server will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.","example":"1704268800000"},"startTimeISO":{"type":"string","description":"An optional start time for sending auto-replies (ISO-8601 GMT timezone). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"2024-01-03T08:00:00.000Z"},"endTime":{"type":"string","description":"An optional end time for sending auto-replies (epoch ms). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"1705046399000"},"endTimeISO":{"type":"string","description":"An optional end time for sending auto-replies (ISO-8601 GMT timezone). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"2024-01-12T07:59:59.000Z"}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:read","email:read:setting_vacation"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:read"],"x-granular-scopes":["email:read:setting_vacation"]}},"put":{"tags":["Settings"],"summary":"Update mailbox vacation response setting","description":"Updates vacation responder settings.\n\n**Scopes:** `mail:write`\n\n**Granular Scopes:** `email:update:setting_vacation`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"update_mailbox_vacation_response_setting","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of VacationSettings object.","content":{"application/json":{"schema":{"required":["enableAutoReply"],"type":"object","properties":{"enableAutoReply":{"type":"boolean","description":"Flag that controls whether server automatically replies to messages.","example":false},"responseSubject":{"type":"string","description":"Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must exist.","example":"Example Response Subject"},"responseBodyPlainText":{"type":"string","description":"Response body in plain text format. If both responseBodyPlainText and responseBodyHtml are specified, responseBodyHtml will be used.","example":"Example Response Body Plain Text"},"responseBodyHtml":{"type":"string","description":"Response body in HTML format. Server will sanitize the HTML before storing it. If both responseBodyPlainText and responseBodyHtml are specified, responseBodyHtml will be used.","example":"Example Response Body Html"},"enableAlwaysRespond":{"type":"boolean","description":"Flag that determines whether vacation responses are repeatedly sent to the same sender. If enableAlwaysRespond is false, the response will be sent to the same sender only once every four days.","example":false},"restrictToContacts":{"type":"boolean","description":"Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.","example":false},"restrictToDomain":{"type":"boolean","description":"Flag that determines whether responses are sent to recipients who are outside of the user's domain.","example":true},"startTime":{"type":"string","description":"An optional start time for sending auto-replies (epoch milliseconds). When this is specified, server will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.","example":"1704268800000"},"startTimeISO":{"type":"string","description":"An optional start time for sending auto-replies (ISO-8601 GMT timezone). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"2024-01-03T08:00:00.000Z"},"endTime":{"type":"string","description":"An optional end time for sending auto-replies (epoch milliseconds). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"1705046399000"},"endTimeISO":{"type":"string","description":"An optional end time for sending auto-replies (ISO-8601 GMT timezone). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"2024-01-12T07:59:59.000Z"}},"additionalProperties":false}}}},"responses":{"200":{"description":"The response body contains an instance of vacation setting object.","content":{"application/json":{"schema":{"type":"object","properties":{"enableAutoReply":{"type":"boolean","description":"Flag that controls whether server automatically replies to messages.  If enableAutoReply is set to true, at least one of the response fields: responseSubject, responseBodyPlainText, or responseBodyHtml should exist.","example":false},"responseSubject":{"type":"string","description":"Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must exist.","example":"Example Response Subject"},"responseBodyPlainText":{"type":"string","description":"Response body in plain text format. If both responseBodyPlainText and responseBodyHtml are specified, responseBodyHtml will be used.","example":"Example Response Body Plain Text"},"responseBodyHtml":{"type":"string","description":"Response body in HTML format. Server will sanitize the HTML before storing it. If both responseBodyPlainText and responseBodyHtml are specified, responseBodyHtml will be used.","example":"Example Response Body Html"},"enableAlwaysRespond":{"type":"boolean","description":"Flag that determines whether vacation responses are always sent to the same sender. If enableAlwaysRespond is false, then the response will be sent to the sender only if another auto response has not been sent to the same sender within the last four days.","example":false},"restrictToContacts":{"type":"boolean","description":"Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.","example":false},"restrictToDomain":{"type":"boolean","description":"Flag that determines whether responses are sent to recipients who are outside of the user's domain.","example":true},"startTime":{"type":"string","description":"An optional start time for sending auto-replies (epoch milliseconds). When this is specified, Zmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.","example":"1704268800000"},"startTimeISO":{"type":"string","description":"An optional start time for sending auto-replies (ISO-8601 GMT timezone). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"2024-01-03T08:00:00.000Z"},"endTime":{"type":"string","description":"An optional end time for sending auto-replies (epoch milliseconds). When this is specified, Zmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"1705046399000"},"endTimeISO":{"type":"string","description":"An optional end time for sending auto-replies (ISO-8601 GMT timezone). When this is specified, server will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.","example":"2024-01-12T07:59:59.000Z"}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","email:update:setting_vacation"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:write"],"x-granular-scopes":["email:update:setting_vacation"]}}},"/emails/mailboxes/{email}/settings/delegates":{"get":{"tags":["Settings.Delegates"],"summary":"List delegates on the mailbox","description":"Lists the delegates on the mailbox.  Managing delegate operations must be done by the mailbox owner.\n\n**Scopes:** `mail:read`\n\n**Granular Scopes:** `email:read:list_setting_delegates`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"list_mailbox_delegates","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"responses":{"200":{"description":"The response body contains a list of delegates this mailbox has.","content":{"application/json":{"schema":{"type":"object","properties":{"delegates":{"type":"array","description":"A list of delegate objects.","items":{"type":"object","properties":{"delegateEmail":{"type":"string","description":"User email to be created as delegate.","example":"john.doe@example.com"},"verificationStatus":{"type":"string","description":"Indicates whether this address has been verified and can act as a delegate for the account.","example":"accepted","enum":["accepted","expired","pending","rejected","verificationStatusUnspecified"]},"delegateAccess":{"type":"string","description":"Indicates the access right for the delegate.","example":"dlgreviewer","enum":["dlgreviewer","dlgauthor","dlgeditor"]},"accessTime":{"type":"string","description":"Time when the delegate was last accessed in epoch milliseconds..","format":"HTMLSafety","example":"1705098965973"},"creationTime":{"type":"string","description":"Time when the delegate was created in epoch milliseconds.","format":"HTMLSafety","example":"1705098965973"}},"description":"An instance of delegate object."}}}}}}},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","email:read:list_setting_delegates"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:read"],"x-granular-scopes":["email:read:list_setting_delegates"]}},"post":{"tags":["Settings.Delegates"],"summary":"Grant a new delegate access on the mailbox","description":"Creates a delegate on the mailbox.  Managing delegate operations must be done by the mailbox owner.\n\n**Scopes:** `mail:write`\n\n**Granular Scopes:** `email:write:setting_delegate`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"grant_mailbox_delegate","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of delegate.","content":{"application/json":{"schema":{"required":["delegateEmail"],"type":"object","properties":{"delegateEmail":{"type":"string","description":"Delegate's email address to be granted access to the mailbox.","example":"john.doe@example.com"},"delegateAccess":{"type":"string","description":"Indicates the access level for the delegate.  Default to dlgeditor.","example":"dlgreviewer","enum":["dlgreviewer","dlgauthor","dlgeditor"]}}}}}},"responses":{"200":{"description":"The response body contains a newly created instance of delegate object.","content":{"application/json":{"schema":{"type":"object","properties":{"delegateEmail":{"type":"string","description":"Delegate's email to be granted.","example":"john.doe@example.com"},"verificationStatus":{"type":"string","description":"Indicates whether this address has been verified and can act as a delegate for the mailbox.","example":"accepted","enum":["accepted","expired","pending","rejected","verificationStatusUnspecified"]},"delegateAccess":{"type":"string","description":"Indicates the access level for the delegate.","example":"dlgreviewer","enum":["dlgreviewer","dlgauthor","dlgeditor"]},"accessTime":{"type":"string","description":"Latest timestamp of the delegate accessed in epoch milliseconds.","format":"HTMLSafety","example":"1705098965973"},"creationTime":{"type":"string","description":"Time when the delegate was granted in epoch milliseconds.","format":"HTMLSafety","example":"1705098965973"}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","email:write:setting_delegate"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:write"],"x-granular-scopes":["email:write:setting_delegate"]}}},"/emails/mailboxes/{email}/settings/delegates/{delegateEmail}":{"get":{"tags":["Settings.Delegates"],"summary":"Get the specified delegate on the mailbox","description":"Retrieves the specified delegate.  Managing delegate operations must be done by the mailbox owner.\n\n**Scopes:** `mail:read`\n\n**Granular Scopes:** `email:read:setting_delegate`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_mailbox_delegate","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"delegateEmail","in":"path","description":"The delegate email address.","required":true,"schema":{"type":"string","example":"john.smith@example.com"}}],"responses":{"200":{"description":"The response body contains an instance of delegate.","content":{"application/json":{"schema":{"type":"object","properties":{"delegateEmail":{"type":"string","description":"User email to be created as delegate.","example":"john.doe@example.com"},"verificationStatus":{"type":"string","description":"Indicates whether this address has been verified and can act as a delegate for the mailbox.","example":"accepted","enum":["accepted","expired","pending","rejected","verificationStatusUnspecified"]},"delegateAccess":{"type":"string","description":"Indicates the access right for the delegate.","example":"dlgreviewer","enum":["dlgreviewer","dlgauthor","dlgeditor"]},"accessTime":{"type":"string","description":"Time when the delegate was last accessed in epoch milliseconds.","format":"HTMLSafety","example":"1705098965973"},"creationTime":{"type":"string","description":"Time when the delegate was created in epoch milliseconds.","format":"HTMLSafety","example":"1705098965973"}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","email:read:setting_delegate"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:read"],"x-granular-scopes":["email:read:setting_delegate"]}},"delete":{"tags":["Settings.Delegates"],"summary":"Revoke an existing delegate access from the mailbox","description":"Removes the specified delegate.  Managing delegate operations must be done by the mailbox owner.\n\n**Scopes:** `mail:write`\n\n**Granular Scopes:** `email:delete:setting_delegate`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"revoke_mailbox_delegate","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"delegateEmail","in":"path","description":"The delegate user's email address.","required":true,"schema":{"type":"string","example":"john.smith@example.com"}}],"responses":{"204":{"description":"The delegate access has been removed."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","email:delete:setting_delegate"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:write"],"x-granular-scopes":["email:delete:setting_delegate"]}}},"/emails/mailboxes/{email}/settings/filters":{"get":{"tags":["Settings.Filters"],"summary":"List email filters","description":"Lists the message filters of a mailbox.\n\n**Scopes:** `mail:read`\n\n**Granular Scopes:** `email:read:list_setting_filters`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"list_email_filters","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"responses":{"200":{"description":"The response body contains a list of filters.","content":{"application/json":{"schema":{"type":"object","properties":{"filter":{"type":"array","description":"A list of filters.","items":{"type":"object","properties":{"id":{"type":"string","description":"The server generated ID of the filter.","example":"e855dd4a292b18b1"},"criteria":{"type":"object","properties":{"from":{"type":"string","description":"The sender's display name or email address.","example":"john.doe@example.com"},"to":{"type":"string","description":"The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@zmail.com\". This field is case-insensitive.","example":"jane.doe@example.com"},"subject":{"type":"string","description":"Case-insensitive phrase found in the message's subject.","example":"email subject."},"query":{"type":"string","description":"Only return messages matching the specified query.","example":"from:user@example.com is:unread"},"negatedQuery":{"type":"string","description":"Only return messages not matching the specified query.","example":"is:unread"},"hasAttachment":{"type":"boolean","description":"Whether the message has any attachment.","example":true},"size":{"type":"integer","description":"The size of the entire RFC822 message in bytes, including all headers and attachments.","example":1024},"sizeComparison":{"type":"string","description":"How the message size in bytes should be in relation to the size field.","example":"smaller","enum":["unspecifield","smaller","larger"]}},"description":"Matching criteria for the filter."},"action":{"type":"object","properties":{"addLabelIds":{"type":"array","description":"List of label IDs to add to the message.","items":{"type":"string","description":"A label ID to add to the message.","example":"TRASH"}},"removeLabelIds":{"type":"array","description":"List of label IDs to remove from the message.","items":{"type":"string","description":"A label ID to remove from the message.","example":"SPAM"}},"forward":{"type":"string","description":"Email address that the message should be forwarded to.","example":"john.doe@example.com"}},"description":"Action that the filter performs."}},"description":"An instance of filter object."}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","email:read:list_setting_filters"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:read"],"x-granular-scopes":["email:read:list_setting_filters"]}},"post":{"tags":["Settings.Filters"],"summary":"Create an email filter","description":"Creates a message filter.\n\n**Scopes:** `mail:write`\n\n**Granular Scopes:** `email:write:setting_filter`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"create_email_filter","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}}],"requestBody":{"description":"The request body contains an instance of filter object.","content":{"application/json":{"schema":{"required":["action","criteria"],"type":"object","properties":{"criteria":{"type":"object","properties":{"from":{"type":"string","description":"The sender's display name or email address.","example":"john.doe@example.com"},"to":{"type":"string","description":"The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@zmail.com\". This field is case-insensitive.","example":"jane.doe@example.com"},"subject":{"type":"string","description":"Case-insensitive phrase found in the message's subject. It should be a general html safe string, for example, prohibit special characters such as '<',  '>',  single quote or double quote etc.","example":"email subject."},"query":{"type":"string","description":"Only return messages matching the specified query.  It should be a general html safe string, for example, prohibit special characters such as '<',  '>',  single quote or double quote etc.","example":"from:user@example.com is:unread"},"negatedQuery":{"type":"string","description":"Only return messages not matching the specified query.  It should be a general html safe string, for example, prohibit special characters such as '<',  '>',  single quote or double quote etc.","example":"is:unread"},"hasAttachment":{"type":"boolean","description":"Whether the message has any attachment.","example":true},"size":{"type":"integer","description":"The size of the entire RFC822 message in bytes, including all headers and attachments.","example":1024},"sizeComparison":{"type":"string","description":"How the message size in bytes should be in relation to the size field.","example":"smaller","enum":["unspecifield","smaller","larger"]}},"description":"Matching criteria of the filter."},"action":{"type":"object","properties":{"addLabelIds":{"type":"array","description":"List of label IDs to add to the message.","items":{"type":"string","description":"A label ID to add to the message.","example":"TRASH"}},"removeLabelIds":{"type":"array","description":"List of label IDs to remove from the message.","items":{"type":"string","description":"A label ID to remove from the message.","example":"SPAM"}},"forward":{"type":"string","description":"Email address that the message should be forwarded to.","example":"john.doe@example.com"}},"description":"A set of actions to perform on a message."}}}}}},"responses":{"200":{"description":"The response body contains the newly created instance of filter.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The server generated ID of the filter.","example":"e855dd4a292b18b1"},"criteria":{"type":"object","properties":{"from":{"type":"string","description":"The sender's display name or email address.","example":"john.doe@example.com"},"to":{"type":"string","description":"The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@zmail.com\". This field is case-insensitive.","example":"jane.doe@example.com"},"subject":{"type":"string","description":"Case-insensitive phrase found in the message's subject.","example":"email subject."},"query":{"type":"string","description":"Only return messages matching the specified query.","example":"from:user@example.com is:unread"},"negatedQuery":{"type":"string","description":"Only return messages not matching the specified query.","example":"is:unread"},"hasAttachment":{"type":"boolean","description":"Whether the message has any attachment."},"size":{"type":"integer","description":"The size of the entire RFC822 message in bytes, including all headers and attachments.","example":1024},"sizeComparison":{"type":"string","description":"How the message size in bytes should be in relation to the size field.","example":"smaller","enum":["unspecifield","smaller","larger"]}},"description":"Matching criteria for the filter."},"action":{"type":"object","properties":{"addLabelIds":{"type":"array","description":"List of label IDs to add to the message.","items":{"type":"string","description":"A label ID to add to the message.","example":"TRASH"}},"removeLabelIds":{"type":"array","description":"List of label IDs to remove from the message.","items":{"type":"string","description":"A label ID to remove from the message.","example":"SPAM"}},"forward":{"type":"string","description":"Email address that the message should be forwarded to.","example":"john.doe@example.com"}},"description":"Action that the filter performs."}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:write","email:write:setting_filter"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:write"],"x-granular-scopes":["email:write:setting_filter"]}}},"/emails/mailboxes/{email}/settings/filters/{filterId}":{"get":{"tags":["Settings.Filters"],"summary":"Get the specified email filter","description":"Retrieves the specified filter.\n\n**Scopes:** `mail:read`\n\n**Granular Scopes:** `email:read:setting_filter`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_email_filter","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"filterId","in":"path","description":"The ID of the filter to be fetched.","required":true,"schema":{"type":"string","example":"e855dc45fb539ebe"}}],"responses":{"200":{"description":"The response body contains an instance of filter object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The server assigned ID of the filter.","example":"e855dd4a292b18b1"},"criteria":{"type":"object","properties":{"from":{"type":"string","description":"The sender's display name or email address.","example":"john.doe@example.com"},"to":{"type":"string","description":"The recipient's display name or email address. Includes recipients in the \"to\", \"cc\", and \"bcc\" header fields. You can use simply the local part of the email address. For example, \"example\" and \"example@\" both match \"example@zmail.com\". This field is case-insensitive.","example":"jane.doe@example.com"},"subject":{"type":"string","description":"Case-insensitive phrase found in the message's subject.","example":"email subject."},"query":{"type":"string","description":"Only return messages matching the specified query.","example":"from:user@example.com is:unread"},"negatedQuery":{"type":"string","description":"Only return messages not matching the specified query.","example":"is:unread"},"hasAttachment":{"type":"boolean","description":"Whether the message has any attachment."},"size":{"type":"integer","description":"The size of the entire RFC822 message in bytes, including all headers and attachments.","example":1024},"sizeComparison":{"type":"string","description":"How the message size in bytes should be in relation to the size field.","example":"smaller","enum":["unspecifield","smaller","larger"]}},"description":"Matching criteria for the filter."},"action":{"type":"object","properties":{"addLabelIds":{"type":"array","description":"List of label IDs to add to the message.","items":{"type":"string","description":"A label ID to add to the message.","example":"TRASH"}},"removeLabelIds":{"type":"array","description":"List of label IDs to remove from the message.","items":{"type":"string","description":"A label ID to remove from the message.","example":"SPAM"}},"forward":{"type":"string","description":"Email address that the message should be forwarded to.","example":"john.doe@example.com"}},"description":"Action that the filter performs."}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","email:read:setting_filter"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:read"],"x-granular-scopes":["email:read:setting_filter"]}},"delete":{"tags":["Settings.Filters"],"summary":"Delete the specified email filter","description":"Immediately and permanently deletes the specified filter.\n\n**Scopes:** `mail:write`\n\n**Granular Scopes:** `email:delete:setting_filter`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"delete_email_filter","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","description":"The user's email address, or special value \"me\" to indicate the authenticated user from the access token.","example":"john.doe@example.com"}},{"name":"filterId","in":"path","description":"The ID of the filter to be deleted.","required":true,"schema":{"type":"string","example":"e855dc45fb539ebe"}}],"responses":{"204":{"description":"The specified email filter is deleted."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","email:delete:setting_filter"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.0","x-permissions":[],"x-macro-scopes":["mail:write"],"x-granular-scopes":["email:delete:setting_filter"]}}},"/emails/mailboxes/{email}/threads":{"get":{"tags":["Threads"],"summary":"List email threads from the mailbox","description":"Lists the threads in the mailbox.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:list_threads`,`email:read:list_threads:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"list_email_threads","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"includeSpamTrash","in":"query","description":"Whether or not to include threads from SPAM and TRASH folders in the results.","required":false,"schema":{"type":"string","example":"false","enum":["true","false"]}},{"name":"labelIds","in":"query","description":"Only return threads with message labels that match all of the specified label IDs in this query parameter.","required":false,"schema":{"type":"string","example":"IMPORTANT"}},{"name":"maxResults","in":"query","description":"Maximum number of threads to return.  It defaults to 50. The maximum allowed value for this parameter is 500.","required":false,"schema":{"type":"string","example":"10"}},{"name":"pageToken","in":"query","description":"Page token to retrieve a specific page of results in the list.","required":false,"schema":{"type":"string","example":"e8580fc3bd75077c"}},{"name":"q","in":"query","description":"Only return threads matching the specified elastic search query.","required":false,"schema":{"type":"string","example":"from:someuser@example.com rfc822msgid:<somemsgid@example.com> is:unread"}}],"responses":{"200":{"description":"Response contains a list of thread objects.","content":{"application/json":{"schema":{"type":"object","properties":{"threads":{"type":"array","description":"The list of thread objects.","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the thread retrieved.","example":"6ddf401500000000_e858101177b8152c_001"},"snippet":{"type":"string","description":"The snippet of the thread retrieved.","example":"Based on previous discussion, we reached preliminary"},"historyId":{"type":"string","description":"The ID of the last history event that modified this thread or thread messages.","example":"1499070"},"threadName":{"type":"string","description":"The name of the thread retrieved.","example":"The latest status of Project Prometheus"},"status":{"type":"string","description":"Whether the thead should be ignored in display.","example":"normal","enum":["normal","ignored"]}}}},"nextPageToken":{"type":"string","description":"Page token to retrieve the next page of results in the list.","example":"e8562c0a6ba2b3cd"},"resultSizeEstimate":{"type":"integer","description":"Estimated number of results in the response.","example":10}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failur <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:list_threads","email:read:list_threads:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:list_threads","email:read:list_threads:admin"]}}},"/emails/mailboxes/{email}/threads/{threadId}":{"get":{"tags":["Threads"],"summary":"Get the specified email thread","description":"Retrieves the specified thread.\n\n**Scopes:** `mail:read`,`mail:read:admin`\n\n**Granular Scopes:** `email:read:thread`,`email:read:thread:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`\n\n**Not supported in Gov cluster** ","operationId":"get_email_thread","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"threadId","in":"path","description":"The ID of the thread to retrieve.","required":true,"schema":{"type":"string","example":"6ddf401500000000_e858101177b8152c_001"}},{"name":"format","in":"query","description":"The format to return the messages in.","required":false,"schema":{"type":"string","example":"full","default":"full","enum":["full","metadata","minimal"]}},{"name":"metadataHeaders","in":"query","description":"When requested format is metadata, only include headers specified in this query parameter.","required":false,"schema":{"type":"string","example":"To"}},{"name":"maxResults","in":"query","description":"Maximum number of thread messages to return. This field defaults to 50. The maximum allowed value for this field is 500.","required":false,"schema":{"type":"string","example":"10"}},{"name":"pageToken","in":"query","description":"Page token to retrieve a specific page of results in the list.","required":false,"schema":{"type":"string","example":"e8580fc3bd75077c"}}],"responses":{"200":{"description":"If successful, the response body contains an instance of thread including its underlying message list.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the thread.","example":"7d4d447700000000_e85f09d67065eb70_121"},"historyId":{"type":"string","description":"The ID of the last history event that modified the messages in the thread.","example":"5153"},"threadName":{"type":"string","description":"The name of the thread retrieved.","example":"The latest status of Project Prometheus."},"status":{"type":"string","description":"Whether the thead should be ignored in display.","example":"normal","enum":["normal","ignored"]},"messages":{"type":"array","description":"List of messages in the thread.","items":{"type":"object","properties":{"id":{"type":"string","description":"The immutable ID of the message.","example":"7d4d447700000000_e85f09d67065eb70_121"},"threadId":{"type":"string","description":"The ID of the thread the message belongs to.","example":"7d4d447700000000_e85f09d67065eb70_121"},"labelIds":{"type":"array","description":"List of label IDs of this message.","items":{"type":"string","description":"A label ID on the message.","example":"INBOX"}},"historyId":{"type":"string","description":"The ID of the last history event that modified this message.","example":"5153"},"internalDate":{"type":"string","description":"The internal message creation timestamp (epoch milliseconds), which determines message ordering in the folder. For normal SMTP-received email, this represents the time the message was originally accepted by Zoom Mail server.","example":"1702631317509"},"expiration":{"type":"string","description":"The timestamp (epoch milliseconds) at which the message is considered expired and can be removed from mailbox.","example":"0"},"lastMoved":{"type":"string","description":"The timestamp (epoch milliseconds) for the last time the message had a label change.","example":"1702866810000"},"payload":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"1.1"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"text/html"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"cats.jpg"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"To"},"value":{"type":"string","description":"The value of the MIME email header.","example":"john.doe@example.com"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_1"},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":5434},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":"dGhpcyBsaW5lIHVzZXMgbWFpbCBtZXJnZSBAZmlyc3RuYW1lCnRoaXMgbGluZSBkb2VzIG5vdCB1c2UgbWFpbCBtZXJnZSBAZmlyc3RuYW1lCg=="}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"multipart/alternative"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Type"},"value":{"type":"string","description":"The value of the MIME email header.","example":"multipart/ALTERNATIVE"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_1"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":""},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":0}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0.0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"text/plain"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo1.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Type"},"value":{"type":"string","description":"The value of the MIME email header.","example":"text/PLAIN"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_2"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":"W2ltYWdlOiBTY3JlZW5zaG90IDIwMjQtMDItMDQgYXQgMTAuMjIuMDjigK9QTS5wbmddCgpXaWxsIHRoaXMgZ2VuZXJhdGUgbXVsdGlwbGUgcGFydD8K"},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":87}},"description":"The message part body for this part, which may be empty for container MIME message parts."},"parts":{"type":"array","description":"The child MIME message parts of this part.","items":{"type":"object","properties":{"partId":{"type":"string","description":"The immutable ID of the message part.","example":"0.0.0"},"mimeType":{"type":"string","description":"The MIME type of the message part.","example":"multipart/related"},"filename":{"type":"string","description":"The filename of the attachment. Only present if this message part represents an attachment.","example":"demo2.xls"},"headers":{"type":"array","description":"List of headers on this message part.","items":{"type":"object","properties":{"name":{"type":"string","description":"The name of the MIME email header.","example":"Content-Transfer-Encoding"},"value":{"type":"string","description":"The value of the MIME email header.","example":"7bit"}},"description":"A MIME message header."}},"body":{"type":"object","properties":{"attachmentId":{"type":"string","description":"When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request.","example":"7d4d447700000000_e85f09d67065eb70_121_3"},"data":{"type":"string","description":"The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.","example":""},"size":{"type":"integer","description":"Number of bytes for the message part data, encoding notwithstanding.","example":0}},"description":"The message part body for this part, which may be empty for container MIME message parts."}}}}},"description":"An instance of MessagePart object."}}},"description":"An instance of MessagePart object."}}},"description":"An instance of MessagePart object."},"snippet":{"type":"string","description":"A preview part of the message text.","example":"auth 7237104a subscribe linux-kernel"},"sendTime":{"type":"string","description":"The desired send time (epoch milliseconds) for a DRAFT or SCHEDULED message.","example":"1704828847000"},"userScheduled":{"type":"boolean","description":"A boolean value indicating if this scheduled message is by user or system.","example":false},"sizeEstimate":{"type":"integer","description":"Size of the email in bytes.","example":2}},"description":"An instance of message object."}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request. <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found. <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure. <br>\n"}},"security":[{"openapi_oauth":["mail:read","mail:read:admin","email:read:thread","email:read:thread:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:read","mail:read:admin"],"x-granular-scopes":["email:read:thread","email:read:thread:admin"]}},"delete":{"tags":["Threads"],"summary":"Delete an existing email thread","description":"Immediately and permanently deletes the specified thread. Any messages that belong to the thread are also deleted. This operation cannot be undone.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:delete:thread`,`email:delete:thread:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"delete_email_thread","parameters":[{"name":"email","in":"path","description":"The user's email address, or special value \"me\" to indicate the authenticated user from the access token.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"threadId","in":"path","description":"The ID of the thread to delete.","required":true,"schema":{"type":"string","example":"6ddf401500000000_e858101177b8152c_001"}}],"responses":{"204":{"description":"The email thread including its messages are deleted. "},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:delete:thread","email:delete:thread:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:delete:thread","email:delete:thread:admin"]}}},"/emails/mailboxes/{email}/threads/{threadId}/modify":{"post":{"tags":["Threads"],"summary":"Update the specified thread","description":"Modifies the labels applied to the thread. This applies to all messages in the thread.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:thread`,`email:write:thread:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"update_email_thread","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"threadId","in":"path","description":"The ID of the thread to retrieve.","required":true,"schema":{"type":"string","example":"6ddf401500000000_e858101177b8152c_001"}}],"requestBody":{"description":"The request body contains list of label IDs to add and/or remove from the thread messages.","content":{"application/json":{"schema":{"type":"object","properties":{"addLabelIds":{"type":"array","description":"A list of IDs of labels to add to the thread messages.","items":{"type":"string","description":"A label ID to add.","example":"Label_1"}},"removeLabelIds":{"type":"array","description":"A list of IDs of labels to remove from the thread messages.","items":{"type":"string","description":"A label ID to remove.","example":"Label_2"}}},"description":"Requires at least one of the \"addLabelIds\" or \"removeLabelIds\" field exist."}}}},"responses":{"200":{"description":"If successful, the response body contains an instance of thread object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the thread.","example":"6ddf401500000000_e858101177b8152c_001"},"messages":{"type":"array","description":"List of the messages in the thread.","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the message.","example":"6ddf401500000000_e858101177b8152c_001"},"threadId":{"type":"string","description":"The ID of the thread.","example":"6ddf401500000000_e858101177b8152c_001"},"labelIds":{"type":"array","description":"List of the label IDs the message currently have.","items":{"type":"string","description":"A label ID of the message.","example":"IMPORTANT"}}}}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:thread","email:write:thread:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:thread","email:write:thread:admin"]}}},"/emails/mailboxes/{email}/threads/{threadId}/trash":{"post":{"tags":["Threads"],"summary":"Move the specified thread to TRASH folder","description":"Moves the specified thread to the trash. Any messages that belong to the thread are also moved to the trash.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:trash_thread`,`email:write:trash_thread:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"trash_email_thread","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"threadId","in":"path","description":"The ID of the thread to trash.","required":true,"schema":{"type":"string","example":"6ddf401500000000_e858101177b8152c_001"}}],"responses":{"200":{"description":"If successful, the response body contains an instance of thread object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the trashed thread.","example":"6ddf401500000000_e858101177b8152c_001"},"messages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the message in the trashed thread.","example":"6ddf401500000000_e858101177b8152c_002"},"threadId":{"type":"string","description":"The ID of the trashed thread the message belongs to.","example":"6ddf401500000000_e858101177b8152c_001"},"labelIds":{"type":"array","description":"The label IDs of the trashed thread message.","items":{"type":"string","description":"A label Id of the message.","example":"TRASH"}}}}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:trash_thread","email:write:trash_thread:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:trash_thread","email:write:trash_thread:admin"]}}},"/emails/mailboxes/{email}/threads/{threadId}/untrash":{"post":{"tags":["Threads"],"summary":"Move the specified thread out of TRASH folder","description":"Move the specified thread out of the trash folder. Any messages that belong to the thread are also removed from the trash.\n\n**Scopes:** `mail:write`,`mail:write:admin`\n\n**Granular Scopes:** `email:write:untrash_thread`,`email:write:untrash_thread:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ","operationId":"untrash_email_thread","parameters":[{"name":"email","in":"path","description":"The mailbox address, or special value \"me\" to indicate the primary mailbox for the authenticated user.","required":true,"schema":{"type":"string","example":"john.doe@example.com"}},{"name":"threadId","in":"path","description":"The ID of the thread to remove from the trash.","required":true,"schema":{"type":"string","example":"6ddf401500000000_e858101177b8152c_001"}}],"responses":{"200":{"description":"If successful, the response body contains an instance of thread object.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the untrashed thread.","example":"6ddf401500000000_e858101177b8152c_001"},"messages":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the message in the untrashed thread.","example":"6ddf401500000000_e858101177b8152c_002"},"threadId":{"type":"string","description":"The ID of the untrashed thread the message belongs to.","example":"6ddf401500000000_e858101177b8152c_001"},"labelIds":{"type":"array","description":"The IDs of labels of the untrashed thread message.","items":{"type":"string","description":"A label ID of the message.","example":"INBOX"}}}}}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Invalid Request <br>\n"},"401":{"description":"**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Authorization Failure <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Not Found <br>\n"},"503":{"description":"**HTTP Status Code:** `503` <br>\n Service Unavailable  \n\n **Error Code:** `503` <br>\n Service Unavailable Or Failure <br>\n"}},"security":[{"openapi_oauth":["mail:write","mail:write:admin","email:write:untrash_thread","email:write:untrash_thread:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"1.0.1","x-permissions":[],"x-macro-scopes":["mail:write","mail:write:admin"],"x-granular-scopes":["email:write:untrash_thread","email:write:untrash_thread:admin"]}}}},"components":{"securitySchemes":{"openapi_authorization":{"type":"apiKey","name":"Authorization","in":"header"},"openapi_oauth":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/","tokenUrl":"","refreshUrl":"","scopes":{"mail:read":"mail:read","mail:read:admin":"mail:read:admin","email:read:list_drafts":"email:read:list_drafts","email:read:list_drafts:admin":"email:read:list_drafts:admin","mail:write":"mail:write","mail:write:admin":"mail:write:admin","email:write:draft":"email:write:draft","email:write:draft:admin":"email:write:draft:admin","email:write:send_draft":"email:write:send_draft","email:write:send_draft:admin":"email:write:send_draft:admin","email:read:draft":"email:read:draft","email:read:draft:admin":"email:read:draft:admin","email:update:draft":"email:update:draft","email:update:draft:admin":"email:update:draft:admin","email:delete:draft":"email:delete:draft","email:delete:draft:admin":"email:delete:draft:admin","email:read:history":"email:read:history","email:read:history:admin":"email:read:history:admin","email:read:list_labels":"email:read:list_labels","email:read:list_labels:admin":"email:read:list_labels:admin","email:write:label":"email:write:label","email:write:label:admin":"email:write:label:admin","email:read:label":"email:read:label","email:read:label:admin":"email:read:label:admin","email:delete:label":"email:delete:label","email:delete:label:admin":"email:delete:label:admin","email:update:label":"email:update:label","email:update:label:admin":"email:update:label:admin","email:read:profile":"email:read:profile","email:read:profile:admin":"email:read:profile:admin","email:write:msg":"email:write:msg","email:write:msg:admin":"email:write:msg:admin","email:read:list_msgs":"email:read:list_msgs","email:read:list_msgs:admin":"email:read:list_msgs:admin","email:write:batch_delete_msgs":"email:write:batch_delete_msgs","email:write:batch_delete_msgs:admin":"email:write:batch_delete_msgs:admin","email:write:batch_modify_msgs":"email:write:batch_modify_msgs","email:write:batch_modify_msgs:admin":"email:write:batch_modify_msgs:admin","email:write:send_msg":"email:write:send_msg","email:write:send_msg:admin":"email:write:send_msg:admin","email:delete:msg":"email:delete:msg","email:delete:msg:admin":"email:delete:msg:admin","email:read:msg":"email:read:msg","email:read:msg:admin":"email:read:msg:admin","email:write:modify_msg":"email:write:modify_msg","email:write:modify_msg:admin":"email:write:modify_msg:admin","email:write:trash_msg":"email:write:trash_msg","email:write:trash_msg:admin":"email:write:trash_msg:admin","email:write:untrash_msg":"email:write:untrash_msg","email:write:untrash_msg:admin":"email:write:untrash_msg:admin","email:read:attachment":"email:read:attachment","email:read:attachment:admin":"email:read:attachment:admin","email:read:setting_vacation":"email:read:setting_vacation","email:update:setting_vacation":"email:update:setting_vacation","email:write:setting_delegate":"email:write:setting_delegate","email:read:list_setting_delegates":"email:read:list_setting_delegates","email:delete:setting_delegate":"email:delete:setting_delegate","email:read:setting_delegate":"email:read:setting_delegate","email:read:list_setting_filters":"email:read:list_setting_filters","email:write:setting_filter":"email:write:setting_filter","email:delete:setting_filter":"email:delete:setting_filter","email:read:setting_filter":"email:read:setting_filter","email:read:list_threads":"email:read:list_threads","email:read:list_threads:admin":"email:read:list_threads:admin","email:read:thread":"email:read:thread","email:read:thread:admin":"email:read:thread:admin","email:delete:thread":"email:delete:thread","email:delete:thread:admin":"email:delete:thread:admin","email:write:thread":"email:write:thread","email:write:thread:admin":"email:write:thread:admin","email:write:trash_thread":"email:write:trash_thread","email:write:trash_thread:admin":"email:write:trash_thread:admin","email:write:untrash_thread":"email:write:untrash_thread","email:write:untrash_thread:admin":"email:write:untrash_thread:admin"}}}}}}}