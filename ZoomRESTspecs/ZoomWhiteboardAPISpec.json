{"openapi":"3.0.0","info":{"title":"Zoom Whiteboard API","description":"The Zoom Whiteboard APIs allow you to manage your Zoom Whiteboard. For example, collaborative persistent whiteboard that allows participants to share and collaborate on a virtual whiteboard in real time The Zoom Whiteboard REST API for [Zoom Whiteboard](https://developers.zoom.us/docs/api/rest/whiteboard/) allows developers to interact with various Zoom features, including Zoom Whiteboard. Developers can create and manage whiteboards programmatically using these APIs.","termsOfService":"https://zoom.us/docs/en-us/zoom_api_license_and_tou.html","contact":{"name":"Zoom Developers","url":"https://developer.zoom.us/"},"version":"2"},"externalDocs":{"description":"Find out more about Swagger","url":"https://swagger.io"},"servers":[{"url":"https://api.zoom.us/v2"}],"paths":{"/whiteboards/sessions":{"get":{"tags":["Archiving"],"summary":"List whiteboards sessions","description":"Lists archived sessions under current account.\n\n**Scopes:** `whiteboard_content:read:admin`,`whiteboard_content:read`\n\n**Granular Scopes:** `whiteboard:read:list_sessions`,`whiteboard:read:list_sessions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"Createwhiteboardsarchivefiles","parameters":[{"name":"page_size","in":"query","description":"The number of records returned within a single API call.","required":false,"schema":{"maximum":300,"type":"integer","example":30,"default":30}},{"name":"next_page_token","in":"query","description":"The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.","required":false,"schema":{"type":"string","example":"IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"}},{"name":"from","in":"query","description":"The query session `start_time` date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. The `start_time` of session in result list should be greater than or equal to `from`. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the `from` and `to` parameters, by default the value of `from` field will be “2020-06-30” and the value of the `to` field will be “2020-07-30”.","required":false,"schema":{"type":"string","format":"date-time","example":"2021-03-12T02:12:27Z"}},{"name":"to","in":"query","description":"The query session`end_time` date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. The `end_time` of session in result list should be less than or equal to `to`.","required":false,"schema":{"type":"string","format":"date-time","example":"2021-03-18T05:41:36Z"}}],"responses":{"200":{"description":"The returned archived sessions list.","content":{"application/json":{"schema":{"required":["from","next_page_token","page_size","to"],"type":"object","properties":{"from":{"type":"string","description":"The queried start date.","format":"date-time","example":"2021-03-12T02:12:27Z"},"to":{"type":"string","description":"The queried end date.","format":"date-time","example":"2021-03-12T02:12:27Z"},"page_size":{"maximum":300,"type":"integer","description":"The number of records returned per page in a single API call.","example":30,"default":30},"next_page_token":{"type":"string","description":"The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\n\nNote: if you use `next_page_token` as a parameter, your other request parameters should be changeless to make sure that the large result set is what you want. For example, if your to parameter is for a future time, Zoom resets this value to the current time and returns this value in the response body, along with the `next_page_token` value. Use these same to and `next_page_token` values in requests for the remaining results set; otherwise you will get an invalid token error.","example":"IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"},"sessions":{"type":"array","description":"The whiteboard archived sessions list. ","items":{"type":"object","properties":{"id":{"type":"string","description":"The session's unique ID.","example":"a2f19f96-9294-4f51-8134-6f0eea108eb2"},"start_time":{"type":"string","description":"The session's start time.\nIt should be `from < start_time`","format":"date-time","example":"2021-03-11T05:41:36Z"},"end_time":{"type":"string","description":"The session's end time.\nIt should be `end_time < to`","format":"date-time","example":"2021-03-11T05:41:36Z"},"whiteboard_id":{"type":"string","description":"The ID of whiteboard.","example":"HY8-AC_HSou4SXY1S-OmOg"},"whiteboard_name":{"type":"string","description":"The name of whiteboard.","example":"example_whiteboard_name"},"expire_time":{"type":"string","description":"The session's expire time. ","format":"date-time","example":"2021-03-26T06:41:36Z"},"regulated_participants":{"type":"array","description":"The session participant under this account.","items":{"type":"object","properties":{"user_id":{"type":"string","description":"The unique ID of participant user in this session.","example":"wf3h7uo1dk0v53bl"},"user_name":{"type":"string","description":"The name of participant user in this session.","example":"Jack"},"join_whiteboard_time":{"type":"string","description":"The user join the whiteboard time.","format":"date-time","example":"2021-03-26T06:41:36Z"},"leave_whiteboard_time":{"type":"string","description":"The user leave the whiteboard time.","format":"date-time","example":"2021-03-26T07:41:36Z"}},"description":"The regulated user info under the account"}}}}},"total_records":{"type":"integer","description":"The total number of returned sessions records.","example":20}}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `34002` <br>\n invalid parameter <br>\n"}},"security":[{"openapi_oauth":["whiteboard_content:read:admin","whiteboard_content:read","whiteboard:read:list_sessions","whiteboard:read:list_sessions:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardContent:Read"],"x-macro-scopes":["whiteboard_content:read:admin","whiteboard_content:read"],"x-granular-scopes":["whiteboard:read:list_sessions","whiteboard:read:list_sessions:admin"]}}},"/whiteboards/sessions/activity/download/{path}":{"get":{"tags":["Archiving"],"summary":"Download Whiteboards activity file","description":"Use this API to download the Whiteboard archival file.\n\n**Scopes:** `whiteboard_content:read`,`whiteboard_content:read:admin`\n\n**Granular Scopes:** `whiteboard:read:archived_file`,`whiteboard:read:archived_file:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"Downloadwhiteboardsactivityfile","parameters":[{"name":"path","in":"path","description":"The file path.","required":false,"schema":{"type":"string","example":"Qg75t7xZBtEbAkjdlgbfdngBBBB"}}],"responses":{"200":{"description":"Returns a file stream.","headers":{"Content-Type":{"description":"Content-Type.","required":false,"schema":{"type":"string","example":"application/octet-stream"}},"Content-Disposition":{"description":"Content-Disposition.","required":false,"schema":{"type":"string","example":"attachment;filename=adcc655d3a3549e692959737fe2a7a0d.pdf"}},"Content-Length":{"description":"Content-Length.","required":false,"schema":{"type":"string","example":"102400"}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `34002` <br>\n Invalid path. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34000` <br>\n The resource not found. The file does not exist or the file has expired. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_content:read","whiteboard_content:read:admin","whiteboard:read:archived_file","whiteboard:read:archived_file:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardContent:Read"],"x-macro-scopes":["whiteboard_content:read","whiteboard_content:read:admin"],"x-granular-scopes":["whiteboard:read:archived_file","whiteboard:read:archived_file:admin"]}}},"/whiteboards/sessions/{seesionId}":{"get":{"tags":["Archiving"],"summary":"List whiteboard sessions activities","description":"Lists a session's activity information.\n\n**Scopes:** `whiteboard_content:read`,`whiteboard_content:read:admin`\n\n**Granular Scopes:** `whiteboard:read:session`,`whiteboard:read:session:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"Listwhiteboardsessionsarchivedfiles","parameters":[{"name":"seesionId","in":"path","description":"The session unique ID.\n","required":false,"schema":{"type":"string","example":"f8b9197a-0c8f-c8de-4db3-d8a5e8d9f505"}},{"name":"page_size","in":"query","description":"The number of records returned within a single API call.","required":false,"schema":{"maximum":300,"type":"integer","example":30,"default":30}},{"name":"next_page_token","in":"query","description":"The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.","required":false,"schema":{"type":"string","example":"IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"}}],"responses":{"200":{"description":"The session activity information.","content":{"application/json":{"schema":{"required":["page_size","total_records"],"type":"object","properties":{"page_size":{"type":"integer","description":"The number of records returned within a single API call.","example":30},"next_page_token":{"type":"string","description":"The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes. **Note**: if you use `next_page_token` as a parameter, your other request parameters should be changeless to make sure that the large result set is what you want. For example, if your to parameter is for a future time, Zoom resets this value to the current time and returns this value in the response body, along with the `next_page_token` value. Use these same to and `next_page_token` values in requests for the remaining results set; otherwise you will get an invalid token error.","example":"IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2"},"session_id":{"type":"string","description":"The unique ID of current session.","example":"a2f19f96-9294-4f51-8134-6f0eea108eb2"},"whiteboard_id":{"type":"string","description":"The ID of the Zoom Whiteboard.","example":"HY8-AC_HSou4SXY1S-OmOg"},"whiteboard_name":{"type":"string","description":"The name of Zoom Whiteboard.","example":"example_whiteboard_name"},"start_time":{"type":"string","description":"The session's start time.","format":"date-time","example":"2021-03-11T05:41:36Z"},"end_time":{"type":"string","description":"The session's end time.","format":"date-time","example":"2021-03-11T06:41:36Z"},"expire_time":{"type":"string","description":"The session's expire time. ","format":"date-time","example":"2021-03-26T06:41:36Z"},"activities":{"type":"array","description":"The activity list of a session.","items":{"type":"object","properties":{"id":{"type":"string","description":"The unique ID of an activity.","example":"cc63bce7-cb59-c1dc-fadd-2be734ad1d55"},"type":{"type":"string","description":"The operation description.","example":"add object"},"download_url":{"type":"string","description":" The URL to download the the archive file. OAuth apps If a user has authorized and installed your OAuth app that contains `whiteboard:read:archived_file` or `whiteboard:read:archived_file:admin` scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. More details refer [Download Whiteboards activity file](https://developers.zoom.us/docs/api/rest/reference/whiteboard/methods/#operation/Downloadwhiteboardsactivityfile)\n For example:  `https://{{base-domain}}/whiteboards/sesssions/activity/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'`","example":"https://example.com/whiteboards/sessions/activity/download/Qg75t7xZBtEbAkjdlgbfdngBBBB"},"create_time":{"type":"string","description":"The activity create time.","format":"date-time","example":"2021-03-11T05:41:36Z"},"user_id":{"type":"string","description":"The ID of user. `nullable`  If the participant is **not** part of the session's account, this returns an empty string value.","example":"wf3h7uo1dk0v53bl"},"collaborator_id":{"type":"string","description":"The participant's unique ID. `not nullable` ","example":"x4g6hy789k0o878k"},"collaborator_name":{"type":"string","description":"The participant's display name.","example":"Jack"}},"description":"activity information"}},"total_records":{"type":"number","description":"The total number of returned activities records.","example":30}}}}}},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34000` <br>\n The session not exist or expired. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_content:read","whiteboard_content:read:admin","whiteboard:read:session","whiteboard:read:session:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.15.0","x-permissions":["WhiteboardContent:Read"],"x-macro-scopes":["whiteboard_content:read","whiteboard_content:read:admin"],"x-granular-scopes":["whiteboard:read:session","whiteboard:read:session:admin"]}}},"/whiteboards/{whiteboardId}/collaborator":{"get":{"tags":["Collaborator"],"summary":"Get collaborators of a whiteboard","description":"Returns a list of a whiteboard collaborators. \n\n**Scopes:** `whiteboard_collaborator:read:admin`\n\n**Granular Scopes:** `whiteboard:read:list_collaborators:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"GetAWhiteboardCollaborator","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"responses":{"200":{"description":"**HTTP Status Code:** `200`   \n \nWhiteboard collaborators returned.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"collaborator_id":{"type":"string","description":"`not nullable` The collaborator's unique ID.","example":"x4g6hy789k0o878k"},"collaborator_name":{"type":"string","description":"The collaborator's display name.","example":"Jack"},"user_id":{"type":"string","description":"`nullable` User ID. This response only returns if the `collaborator_type` is `0`. If the `collaborator_type` is **not** `0`, this returns null value.","example":"wf3h7uo1dk0v53bl"},"channel_id":{"type":"string","description":"`nullable` Team chat channel ID. This response only returns if the `collaborator_type` is `2`. If the `collaborator_type` is **not** `2`, this returns null value.","example":"cabc1234567defghijkl01234"},"avatar":{"type":"string","description":"The collaborator profile picture.","example":"https://content.zoom.us/swerwerw.jpeg"},"role":{"type":"integer","description":"The collaborator role type. \nEnum: \n* `0` - OWNER \n* `1` - CO_OWNER \n* `2` - EDITOR \n* `3` - COMMENTER \n* `4` - VIEWER \n","example":0,"enum":[0,1,2,3,4],"x-enum-descriptions":["OWNER","CO_OWNER","EDITOR","COMMENTER","VIEWER"]},"collaborator_type":{"type":"integer","description":"The collaborator type. \nEnum: \n* `0` - SAME_ACCOUNT_USER \n* `1` - EXTERNAL_USER \n* `2` - CHANNEL \n","example":0,"enum":[0,1,2],"x-enum-descriptions":["SAME_ACCOUNT_USER","EXTERNAL_USER","CHANNEL"]}},"description":"A user or a team chat channel who works jointly on a whiteboard."}}}}},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_collaborator:read:admin","whiteboard:read:list_collaborators:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Read"],"x-macro-scopes":["whiteboard_collaborator:read:admin"],"x-granular-scopes":["whiteboard:read:list_collaborators:admin"]}},"post":{"tags":["Collaborator"],"summary":"Share a whiteboard to new users or team chat channels.","description":"Use this API to add collaborators to a whiteboard.\n\n**Scopes:** `whiteboard_collaborator:write:admin`\n\n**Granular Scopes:** `whiteboard:write:collaborator:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"AddAWhiteboardCollaborator","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"collaborators":{"type":"array","description":"Array of collaborator objects.","items":{"type":"object","properties":{"email":{"type":"string","description":"The user `email address` you want to share with. This field is required  when the `type` is set `0`. Otherwise it should be empty.","example":"user@example.com."},"channel_id":{"type":"string","description":"The team chat `channel ID` you want to share with. This field is required  when the `type` is set `1`. Otherwise it should be empty.","example":"cabc1234567defghijkl01234"},"role":{"type":"integer","description":"Collaborator role type. \nEnum: \n* `0` - OWNER \n* `1` - CO_OWNER \n* `2` - EDITOR \n* `3` - COMMENTER \n* `4` - VIEWER \n","example":1,"enum":[0,1,2,3,4],"x-enum-descriptions":["OWNER","CO_OWNER","EDITOR","COMMENTER","VIEWER"]}},"description":"A user or a team chat channel who works jointly on a whiteboard. \n* `Email` or `ChannelId` is required according to the audience `type`."}}},"description":"Users or team chat channels that want to be added to a whiteboard."}}}},"responses":{"201":{"description":"**HTTP Status Code:** `201`   \n \nWhiteboard added collaborators returned.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"collaborator_id":{"type":"string","description":"`not nullable` The collaborator's unique ID.","example":"x4g6hy789k0o878k"},"collaborator_name":{"type":"string","description":"The collaborator's display name.","example":"Jack"},"user_id":{"type":"string","description":"`nullable` User ID. This response only returns if the `collaborator_type` is `0`. If the `collaborator_type` is **not** `0`, this returns null value.","example":"wf3h7uo1dk0v53bl"},"channel_id":{"type":"string","description":"`nullable` Team chat channel ID. This response only returns if the `collaborator_type` is `2`. If the `collaborator_type` is **not** `2`, this returns null value.","example":"cabc1234567defghijkl01234"},"avatar":{"type":"string","description":"Collaborator profile picture.","example":"https://content.zoom.us/swerwerw.jpeg"},"role":{"type":"integer","description":"Collaborator role type. \nEnum: \n* `0` - OWNER \n* `1` - CO_OWNER \n* `2` - EDITOR \n* `3` - COMMENTER \n* `4` - VIEWER \n","example":0,"enum":[0,1,2,3,4],"x-enum-descriptions":["OWNER","CO_OWNER","EDITOR","COMMENTER","VIEWER"]},"collaborator_type":{"type":"integer","description":"Collaborator type. \nEnum: \n* `0` - SAME_ACCOUNT_USER \n* `1` - EXTERNAL_USER \n* `2` - CHANNEL \n","example":0,"enum":[0,1,2],"x-enum-descriptions":["SAME_ACCOUNT_USER","EXTERNAL_USER","CHANNEL"]}},"description":"A user or a team chat channel who works jointly on a whiteboard."}}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `34002` <br>\n Invalid email {Email}. <br>\n**Error Code:** `34002` <br>\n You are not the member of channel {ChannelId}. <br>\n"},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_collaborator:write:admin","whiteboard:write:collaborator:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Edit"],"x-macro-scopes":["whiteboard_collaborator:write:admin"],"x-granular-scopes":["whiteboard:write:collaborator:admin"]}},"patch":{"tags":["Collaborator"],"summary":"Update whiteboard collaborators","description":"Use this API to update whiteboard collaborators. \n\n\n\n**Scopes:** `whiteboard_collaborator:write:admin`\n\n**Granular Scopes:** `whiteboard:update:collaborator:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"UpdateAWhiteboardCollaborator","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"collaborators":{"type":"array","description":"An array of collaborator objects.","items":{"type":"object","properties":{"collaborator_id":{"type":"string","description":"`not nullable` The collaborator's unique ID.","example":"x4g6hy789k0o878k"},"role":{"type":"integer","description":"The collaborator role type. \nEnum: \n* `0` - OWNER \n* `1` - CO_OWNER \n* `2` - EDITOR \n* `3` - COMMENTER \n* `4` - VIEWER \n","example":0,"enum":[0,1,2,3,4],"x-enum-descriptions":["OWNER","CO_OWNER","EDITOR","COMMENTER","VIEWER"]}}}}},"description":"Update collaborators permission of a whiteboard."}}}},"responses":{"204":{"description":"**HTTP Status Code**: `204`   \n \nWhiteboard collaborators updated successfully."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `34002` <br>\n Invalid collaboratorId {collaboratorId}. <br>\n"},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_collaborator:write:admin","whiteboard:update:collaborator:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Edit"],"x-macro-scopes":["whiteboard_collaborator:write:admin"],"x-granular-scopes":["whiteboard:update:collaborator:admin"]}}},"/whiteboards/{whiteboardId}/collaborator/{collaboratorId}":{"delete":{"tags":["Collaborator"],"summary":"Remove the collaborator from a whiteboard","description":"Removes a collaborator from a whiteboard. \n\n\n\n**Scopes:** `whiteboard_collaborator:write:admin`\n\n**Granular Scopes:** `whiteboard:delete:collaborator:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"DeleteAWhiteboardCollaborator","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}},{"name":"collaboratorId","in":"path","description":"The ID of the whiteboard collaborator.","required":true,"schema":{"type":"string","example":"sWvlvz-G5XFQxpfxEBB0PfVALRdcpHdTAqwqigrOPb1TgkxtFJI.3Z6nozeexgNAEecI"}}],"responses":{"204":{"description":"**HTTP Status Code**: `204`   \n \nWhiteboard collaborators deleted successfully."},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34002` <br>\n Resource not found.  <br>\n"}},"security":[{"openapi_oauth":["whiteboard_collaborator:write:admin","whiteboard:delete:collaborator:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Edit"],"x-macro-scopes":["whiteboard_collaborator:write:admin"],"x-granular-scopes":["whiteboard:delete:collaborator:admin"]}}},"/whiteboards":{"get":{"tags":["Document"],"summary":"List all whiteboards","description":"Use this API to list whiteboards of current user (**Required Scopes**: `whiteboard:read`) or list all whiteboards under the account (**Required Scopes**: `whiteboard:read:admin`).\n\n**Note:** `user_id` can intake `Zoom user ID` or `email` which only applies when scope = `whiteboard:read:admin`. Otherwise, the `user_id` can only intake `me`.\n\n**Scopes:** `whiteboard:read:admin`,`whiteboard:read`\n\n**Granular Scopes:** `whiteboard:read:list_whiteboards:admin`,`whiteboard:read:list_whiteboards`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"ListWhiteboards","parameters":[{"name":"search_key","in":"query","description":"The name of a whiteboard. If this parameter is provided, only the matched whiteboard will be returned. Otherwise, all whiteboards will be returned.","required":false,"schema":{"type":"string","example":"PGsQ3nwITmyTG4JkFNWJcg"}},{"name":"user_id","in":"query","description":"The email address or user ID of the whiteboard owner. If this parameter is provided, only the whiteboard owned by the provided user will be returned. \nIf set to `me`, will return the matched whiteboards of current user.","required":false,"schema":{"type":"string","example":"me"}},{"name":"date_filter_type","in":"query","description":"The whiteboard date filter type. \nEnum:\n* `created_date` - Whiteboard create date. \n* `modified_date` - Whiteboard modify date.\n","required":false,"schema":{"type":"string","example":"modified_date","default":"modified_date","enum":["created_date","modified_date"],"x-enum-descriptions":["Whiteboard creation date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC(Coordinated Universal Time) format","Whiteboard  modification date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC(Coordinated Universal Time) format"]}},{"name":"from","in":"query","description":"The queried start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format for the created date range for which you would like to retrieve whiteboards. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the &ldquo;from&rdquo; and &ldquo;to&rdquo; parameters, by default the value of 'from' field will be &ldquo;2020-06-30&rdquo; and the value of the 'to' field will be &ldquo;2020-07-01&rdquo;.","required":false,"schema":{"type":"string","format":"date-time","example":"2022-03-08T16:00:00Z"}},{"name":"to","in":"query","description":"The queried end date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format. ","required":false,"schema":{"type":"string","format":"date-time","example":"2022-03-08T16:00:00Z"}},{"name":"page_size","in":"query","description":"The number of records returned from a single API call.","required":false,"schema":{"maximum":50,"type":"integer","example":10,"default":10}},{"name":"next_page_token","in":"query","description":"The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.","required":false,"schema":{"type":"string","example":"R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"}}],"responses":{"200":{"description":"**HTTP Status Code:** `200`   \n \nWhiteboard list returned.","content":{"application/json":{"schema":{"title":"Whiteboard List","description":"The whiteboard list.","allOf":[{"type":"object","properties":{"whiteboards":{"type":"array","description":"The information about the whiteboard list.","items":{"allOf":[{"properties":{"whiteboard_id":{"type":"string","description":"Whiteboard ID","example":"48Z4ppMfQJWONeVWFCcVzA"},"whiteboard_name":{"type":"string","description":"Whiteboard name","example":"Q3 Plan","default":"Untitled"},"locked":{"type":"boolean","description":"Indicates whether the whiteboard is locked or not.\n\n`true`: The whiteboard is locked.   \n \n\n`false`: The whiteboard is unlocked","example":false,"default":false},"trashed":{"type":"boolean","description":"Indicates whether the whiteboard is moved to trash or not.\n\n`true`: The whiteboard is moved to trash.   \n \n\n`false`: The whiteboard isn't moved to trash","example":false,"default":false},"readonly":{"type":"boolean","description":"Indicates whether the whiteboard is editable or not. If a whiteboard is locked, this field will set `true`. \n\n`true`: The whiteboard is editable.   \n \n\n`false`: The whiteboard is readonly","example":false,"default":false},"non_cloud":{"type":"boolean","description":"Indicates whether the whiteboard is allowed to be saved to cloud or not.\n\n`true`: The whiteboard is a saved to cloud.   \n \n\n`false`: The whiteboard isn't saved to cloud","example":false,"default":false},"created_date":{"type":"string","description":"Whiteboard create date-time in UTC/GMT. Example: &quot;2020-03-31T12:02:00Z&quot;","format":"date-time","example":"2022-03-25T07:29:29Z"},"modified_date":{"type":"string","description":"Whiteboard update date-time in UTC/GMT. Example: &quot;2020-03-31T12:02:00Z&quot;","format":"date-time","example":"2022-03-25T07:29:29Z"},"share_link_setting":{"type":"object","properties":{"share_scope":{"type":"integer","description":"The access type of whiteboard share link. \n* Enum: \n* `0` - `Restricted`, Only people added can open with this link \n* `1` - `Same account` \n* `2` - Anyone \n* `3` - SAME_ACCOUNT_EXTERNAL_AUTH \n","example":0,"default":0,"enum":[0,1,2,3],"x-enum-descriptions":["Restricted. Only people added can open with this link","Same account","Anyone","Same account external auth"]},"share_role":{"type":"integer","description":"The access level of whiteboard share link. This field need to used with `share_scope`. If `share_scope` set `0` - `Restricted`, this field is null. If `share_scope` set `1` - `Same account` or `2` - `Anyone`, this filed can be `2` - `Editor`, `3` - `Commenter` or `4` - `Viewer`. \n* Enum: \n* `2` - `Editor`\n* `3` - `Commenter` \n* `4` - Viewer \n","example":2,"enum":[2,3,4],"x-enum-descriptions":["Editor","Commenter","Viewer"]}},"description":"The access level, access type of current whiteboard share link."},"advanced_share_setting":{"type":"object","properties":{"can_share":{"type":"boolean","description":"Indicate whether users can share at or below their permission level or not. \n\n`true`: Users can share at or below their permission level.   \n \n\n`false`: Users cannot share at or below their permission level.","example":true},"share_to_external":{"type":"boolean","description":"Indicate whether internal users can share with external users or not. \n\n`true`: Internal users can share with external users.   \n \n\n`false`: Internal users cannot share with external users.","example":true},"external_can_share":{"type":"boolean","description":"Indicate whether external user can share the whiteboard to others or not. \n\n`true`: External user can share the whiteboard to others.   \n \n\n`false`:External user cannot share the whiteboard to others.","example":true}},"description":"Whiteboard advanced share setting."}},"description":"Whiteboard object"}]}},"next_page_token":{"type":"string","description":"The next page token paginates through a large set of results. A next page token is returned when the available results exceed the current page size. The expiration period for this token is 15 minutes.","example":"qUEQqB1V0HVhJmwKFQrGOD"},"page_size":{"type":"integer","description":"The number of records returned per page in a single API call.","example":10},"total_records":{"type":"integer","description":"The total number of records found.","example":2}}}]}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "}},"security":[{"openapi_oauth":["whiteboard:read:admin","whiteboard:read","whiteboard:read:list_whiteboards:admin","whiteboard:read:list_whiteboards"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.17.0","x-permissions":["WhiteboardManagement:Read"],"x-macro-scopes":["whiteboard:read:admin","whiteboard:read"],"x-granular-scopes":["whiteboard:read:list_whiteboards:admin","whiteboard:read:list_whiteboards"]}},"post":{"tags":["Document"],"summary":"Create a new whiteboard","description":"Use this API to create a new whiteboard for a user.\n\n\n\n**Scopes:** `whiteboard:write`\n\n**Granular Scopes:** `whiteboard:write:whiteboard`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`","operationId":"newWhiteboardCreate","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The whiteboard name.","example":"Q3 Plan","default":"Untitled"}},"description":"Create a new whiteboard request body."}}}},"responses":{"201":{"description":"**HTTP Status Code:** `201`   \n \nWhiteboard created successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"whiteboard_id":{"type":"string","description":"The whiteboard ID.","example":"48Z4ppMfQJWONeVWFCcVzA"},"whiteboard_name":{"type":"string","description":"The whiteboard name.","example":"Q3 Plan","default":"Untitled"},"locked":{"type":"boolean","description":"Indicates whether the whiteboard is locked or not.\n\n`true`: The whiteboard is locked.   \n \n\n`false`: The whiteboard is unlocked.","example":false,"default":false},"trashed":{"type":"boolean","description":"Indicates whether the whiteboard is moved to trash or not.\n\n`true`: The whiteboard is moved to trash.   \n \n\n`false`: The whiteboard isn't moved to trash.","example":false,"default":false},"readonly":{"type":"boolean","description":"Indicates whether the whiteboard is editable or not. If a whiteboard is locked, this field will set `true`. \n\n`true`: The whiteboard is editable.   \n \n\n`false`: The whiteboard is readonly.","example":false,"default":false},"non_cloud":{"type":"boolean","description":"Indicates whether the whiteboard is allowed to be saved to cloud or not.\n\n`true`: The whiteboard is a saved to cloud.   \n \n\n`false`: The whiteboard isn't saved to cloud.","example":false,"default":false},"created_date":{"type":"string","description":"The whiteboard create date-time in UTC/GMT. Example: &quot;2020-03-31T12:02:00Z&quot;","format":"date-time","example":"2022-03-25T07:29:29Z"},"modified_date":{"type":"string","description":"The whiteboard update date-time in UTC/GMT. Example: &quot;2020-03-31T12:02:00Z&quot;","format":"date-time","example":"2022-03-25T07:29:29Z"},"share_link_setting":{"type":"object","properties":{"share_scope":{"type":"integer","description":"The access type of whiteboard share link. \n* Enum: \n* `0` - `Restricted`, Only people added can open with this link \n* `1` - `Same account` \n* `2` - Anyone \n* `3` - SAME_ACCOUNT_EXTERNAL_AUTH \n","example":0,"default":0,"enum":[0,1,2,3],"x-enum-descriptions":["Restricted. Only people added can open with this link","Same account","Anyone","Same account external auth"]},"share_role":{"type":"integer","description":"The access level of whiteboard share link. This field need to used with `share_scope`. If `share_scope` set `0` - `Restricted`, this field is null. If `share_scope` set `1` - `Same account` or `2` - `Anyone`, this filed can be `2` - `Editor`, `3` - `Commenter` or `4` - `Viewer`. \n* Enum: \n* `2` - `Editor`\n* `3` - `Commenter` \n* `4` - Viewer \n","example":2,"enum":[2,3,4],"x-enum-descriptions":["Editor","Commenter","Viewer"]}},"description":"The access level, access type of current whiteboard share link."},"advanced_share_setting":{"type":"object","properties":{"can_share":{"type":"boolean","description":"Indicate whether users can share at or below their permission level or not. \n\n`true`: Users can share at or below their permission level.   \n \n\n`false`: Users cannot share at or below their permission level.","example":true},"share_to_external":{"type":"boolean","description":"Indicate whether internal users can share with external users or not. \n\n`true`: Internal users can share with external users.   \n \n\n`false`: Internal users cannot share with external users.","example":true},"external_can_share":{"type":"boolean","description":"Indicate whether external user can share the whiteboard to others or not. \n\n`true`: External user can share the whiteboard to others.   \n \n\n`false`:External user cannot share the whiteboard to others.","example":true}},"description":"Whiteboard advanced share setting."}},"description":"The whiteboard object."}}}},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request \n\n "}},"security":[{"openapi_oauth":["whiteboard:write","whiteboard:write:whiteboard"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":[],"x-macro-scopes":["whiteboard:write"],"x-granular-scopes":["whiteboard:write:whiteboard"]}}},"/whiteboards/{whiteboardId}":{"get":{"tags":["Document"],"summary":"Get a whiteboard","description":"Retrieve a whiteboard's information.\n\n**Scopes:** `whiteboard:read:admin`,`whiteboard:read`\n\n**Granular Scopes:** `whiteboard:read:whiteboard:admin`,`whiteboard:read:whiteboard`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"GetAWhiteboard","parameters":[{"name":"whiteboardId","in":"path","description":"The whiteboard's ID.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"responses":{"200":{"description":"**HTTP Status Code:** `200`   \n \nWhiteboard object returned.","content":{"application/json":{"schema":{"type":"object","properties":{"whiteboard_id":{"type":"string","description":"The whiteboard ID.","example":"48Z4ppMfQJWONeVWFCcVzA"},"whiteboard_name":{"type":"string","description":"The whiteboard name.","example":"Q3 Plan","default":"Untitled"},"locked":{"type":"boolean","description":"Indicates whether the whiteboard is locked or not.\n\n`true`-  The whiteboard is locked.   \n \n\n`false` - The whiteboard is unlocked.","example":false,"default":false},"trashed":{"type":"boolean","description":"Indicates whether the whiteboard is moved to trash or not.\n\n`true` - The whiteboard is moved to trash.   \n \n\n`false` - The whiteboard isn't moved to trash.","example":false,"default":false},"readonly":{"type":"boolean","description":"Indicates whether the whiteboard is editable or not. If a whiteboard is locked, this field will be set to `true`. \n\n`true` - The whiteboard is editable.   \n \n\n`false` - The whiteboard is read only.","example":false,"default":false},"non_cloud":{"type":"boolean","description":"Indicates whether the whiteboard is allowed to be saved to cloud or not.\n\n`true` - The whiteboard is a saved to cloud.   \n \n\n`false` - The whiteboard isn't saved to cloud.","example":false,"default":false},"created_date":{"type":"string","description":"The whiteboard creation date and time in UTC/GMT. Example: `2020-03-31T12:02:00Z`","format":"date-time","example":"2022-03-25T07:29:29Z"},"modified_date":{"type":"string","description":"The whiteboard update date and time in UTC/GMT. Example: `2020-03-31T12:02:00Z`","format":"date-time","example":"2022-03-25T07:29:29Z"},"share_link_setting":{"type":"object","properties":{"share_scope":{"type":"integer","description":"The access type of whiteboard sharing link. \n* Enum: \n* `0` - `Restricted`. Only people added can open with this link. \n* `1` - `Same account` \n* `2` - Anyone \n* `3` - `SAME_ACCOUNT_EXTERNAL_AUTH` \n","example":0,"default":0,"enum":[0,1,2,3],"x-enum-descriptions":["Restricted. Only people added can open with this link","Same account","Anyone","Same account external auth"]},"share_role":{"type":"integer","description":"The access level of whiteboard share link. This field need to used with `share_scope`. If `share_scope` set `0` - `Restricted`. This field is null. If `share_scope` set `1` - `Same account` or `2` - `Anyone`, this field can be `2` - `Editor`, `3` - `Commenter` or `4` - `Viewer`. \n* Enum: \n* `2` - `Editor`\n* `3` - `Commenter` \n* `4` - Viewer \n","example":2,"enum":[2,3,4],"x-enum-descriptions":["Editor","Commenter","Viewer"]}},"description":"The access level, access type of current whiteboard share link."},"advanced_share_setting":{"type":"object","properties":{"can_share":{"type":"boolean","description":"Indicate whether users can share at or below their permission level or not. \n\n`true`: Users can share at or below their permission level.   \n \n\n`false`: Users cannot share at or below their permission level.","example":true},"share_to_external":{"type":"boolean","description":"Indicate whether internal users can share with external users or not. \n\n`true`: Internal users can share with external users.   \n \n\n`false`: Internal users cannot share with external users.","example":true},"external_can_share":{"type":"boolean","description":"Indicate whether external user can share the whiteboard to others or not. \n\n`true`: External user can share the whiteboard to others.   \n \n\n`false`:External user cannot share the whiteboard to others.","example":true}},"description":"The whiteboard advanced share setting."},"share_link":{"type":"string","description":"The whiteboard share link.","example":"https://zoom.us/wb/doc/T-E0zR9NQWSDuvXd-Crt9A"},"preview_link":{"type":"string","description":"The whiteboard preview link. This link's validity period is `2 hours`, and the maximum number of downloads is `99 times`.","example":"https://a01file.zoom.us/file/xxxxx/attach/preview/192x108?jwt=xxx"},"created_by_display_name":{"type":"string","description":"The creator display name of the whiteboard.","example":"Tom"},"modified_by_display_name":{"type":"string","description":"The latest modify user display name of the whiteboard.","example":"Jack"}},"description":"Whiteboard object"}}}},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111800` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard:read:admin","whiteboard:read","whiteboard:read:whiteboard:admin","whiteboard:read:whiteboard"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.15.0","x-permissions":["WhiteboardManagement:Read"],"x-macro-scopes":["whiteboard:read:admin","whiteboard:read"],"x-granular-scopes":["whiteboard:read:whiteboard:admin","whiteboard:read:whiteboard"]}},"put":{"tags":["Document"],"summary":"Update whiteboard basic information","description":"Use this API to rename a whiteboard, update whiteboard status (locked or unlocked). \n\n**Scopes:** `whiteboard:write:admin`\n\n**Granular Scopes:** `whiteboard:update:whiteboard:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"UpdateAWhiteboardMetadata","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The whiteboard name.","example":"Q3 Plan","default":"Untitled"},"locked":{"type":"boolean","description":"Indicates whether the whiteboard is locked or not.\n\n`true`: The whiteboard is locked.   \n \n\n`false`: The whiteboard is unlocked.","example":false,"default":false}},"description":"Update a whiteboard request body"}}}},"responses":{"204":{"description":"**HTTP Status Code**: `204`   \n \nWhiteboard updated successfully."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111800` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard:write:admin","whiteboard:update:whiteboard:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Edit"],"x-macro-scopes":["whiteboard:write:admin"],"x-granular-scopes":["whiteboard:update:whiteboard:admin"]}},"delete":{"tags":["Document"],"summary":"Delete a whiteboard","description":"Deletes a whiteboard.\n\n**Scopes:** `whiteboard:write:admin`,`whiteboard:write`\n\n**Granular Scopes:** `whiteboard:delete:whiteboard:admin`,`whiteboard:delete:whiteboard`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"DeleteAWhiteboard","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"responses":{"204":{"description":"**HTTP Status Code**: `204`   \n \nWhiteboard Deleted."},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard:write:admin","whiteboard:write","whiteboard:delete:whiteboard:admin","whiteboard:delete:whiteboard"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Edit"],"x-macro-scopes":["whiteboard:write:admin","whiteboard:write"],"x-granular-scopes":["whiteboard:delete:whiteboard:admin","whiteboard:delete:whiteboard"]}}},"/whiteboards/export":{"post":{"tags":["Export"],"summary":"Create whiteboard export","description":" Generates the export for the provided whiteboards. This process will generate a PDF of whiteboard projects along with an audit log, bundling them into a zip file.\n\n**Scopes:** `whiteboard_export:write:admin`,`whiteboard_export:write`\n\n**Granular Scopes:** `whiteboard:write:export`,`whiteboard:write:export:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"Createwhiteboardsexport","requestBody":{"content":{"application/json":{"schema":{"required":["whiteboard_ids"],"type":"object","properties":{"whiteboard_ids":{"maxItems":50,"minItems":1,"uniqueItems":true,"type":"array","description":"The list of whiteboard IDs. The list size must be **less than** 50, if more than 50, the API will **intercept** the first 50 IDs.","items":{"type":"string","description":"The ID of the whiteboard.","example":"HY8-AC_HSou4SXY1S-OmOg"}}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"required":["task_id"],"type":"object","properties":{"task_id":{"type":"string","description":"The unique identifier of the generated file, which expires is **30 days**. Use this task_id to query the progress of file generation (For more details, please refer to：[**Get whiteboard export generation status**](https://developers.zoom.us/docs/zoom-whiteboard/apis/#operation/Getwhiteboardexportdatagenerationstatus). Once the file is ready, you can download it using the user's OAuth token. For example: `https://{base_domain}/v2/whiteboards/export/task/{taskId} --header 'Authorization: Bearer {{OAuth-access-token}}` .","example":"f7f3cdd37bf74550afe7cdf79128a574"}}}}}},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34002` <br>\n The whiteboard {whiteboard_id} not found <br>\n"}},"security":[{"openapi_oauth":["whiteboard_export:write:admin","whiteboard_export:write","whiteboard:write:export","whiteboard:write:export:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardContent:Read"],"x-macro-scopes":["whiteboard_export:write:admin","whiteboard_export:write"],"x-granular-scopes":["whiteboard:write:export","whiteboard:write:export:admin"]}}},"/whiteboards/export/task/{taskId}":{"get":{"tags":["Export"],"summary":"Download whiteboard export","description":"Use this API to download the whiteboard export.\n\n**Scopes:** `whiteboard_content:read:admin`,`whiteboard_content:read`\n\n**Granular Scopes:** `whiteboard:read:export`,`whiteboard:read:export:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"Downloadwhiteboardexport","parameters":[{"name":"taskId","in":"path","description":"The unique identifier of the whiteboards file. The `task_id` generated by [**Create whiteboard export**](https://developers.zoom.us/docs/zoom-whiteboard/apis/#operation/Createwhiteboardsexport) interface.","required":false,"schema":{"type":"string","example":"f7f3cdd37bf74550afe7cdf79128a574"}}],"responses":{"200":{"description":"Returns a file stream, with the file type of ZIP."},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34002` <br>\n The task {task_id} not found <br>\n"}},"security":[{"openapi_oauth":["whiteboard_content:read:admin","whiteboard_content:read","whiteboard:read:export","whiteboard:read:export:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardContent:Read"],"x-macro-scopes":["whiteboard_content:read:admin","whiteboard_content:read"],"x-granular-scopes":["whiteboard:read:export","whiteboard:read:export:admin"]}}},"/whiteboards/export/task/{taskId}/status":{"get":{"tags":["Export"],"summary":"Get whiteboard export generation status","description":"Use this API to query the status of the whiteboard export generation. Before using this API, confirm that you have invoked the interface for generating the whiteboard file  [**Create whiteboard export**](https://developers.zoom.us/docs/zoom-whiteboard/apis/#operation/Createwhiteboardsexport) and obtained the `task_id`.\n\n**Scopes:** `whiteboard_content:read:admin`,`whiteboard_content:read`\n\n**Granular Scopes:** `whiteboard:read:export`,`whiteboard:read:export:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"Getwhiteboardexportdatagenerationstatus","parameters":[{"name":"taskId","in":"path","description":"The unique identifier of the whiteboard export. ","required":false,"schema":{"type":"string","example":"adcc655d3a3549e692959737fe2a7a0d"}}],"responses":{"200":{"description":"Whiteboard export generation status.","content":{"application/json":{"schema":{"required":["status","total"],"type":"object","properties":{"processed":{"type":"array","description":"List of processed whiteboard IDs.","items":{"type":"string","description":"The whiteboard ID.","example":"48Z4ppMfQJWONeVWFCcVzA"}},"status":{"type":"string","description":"Whiteboard export generation status. \n* Enum:\n* `processing` - Generating whiteboard export\n* `successed` - Whiteboard export generated successfully(as long as one is successful, it counts as a success)\n* `failed` - Whiteboard export generation failed","example":"processing","enum":["processing","successed","failed"],"x-enum-descriptions":["Generating whiteboard file","Whiteboard file generated successfully.","Whiteboard file generation failed"]},"total":{"type":"integer","description":"Total number of whiteboards requiring export generation.","example":3},"failed":{"type":"array","description":"List of failed whiteboard IDs.","items":{"type":"string","description":"The whiteboard ID.","example":"UyKtcVj5REWMFT2qd-4qfg"}},"processing":{"type":"array","description":"List of whiteboards being processed.","items":{"type":"string","description":"The whiteboard ID.","example":"r2Qr1q4hSxu03MG3hk03uA"}}}}}}},"404":{"description":"**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `34002` <br>\n The task {task_id} not found. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_content:read:admin","whiteboard_content:read","whiteboard:read:export","whiteboard:read:export:admin"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardContent:Read"],"x-macro-scopes":["whiteboard_content:read:admin","whiteboard_content:read"],"x-granular-scopes":["whiteboard:read:export","whiteboard:read:export:admin"]}}},"/whiteboards/{whiteboardId}/share_setting":{"patch":{"tags":["Settings"],"summary":"Update whiteboard share setting","description":"Updates the whiteboard share setting. \n\n\n\n**Scopes:** `whiteboard_share_setting:write:admin`,`whiteboard_share_setting:write`\n\n**Granular Scopes:** `whiteboard:update:share_setting:admin`,`whiteboard:update:share_setting`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`","operationId":"UpdateAWhiteboardShareSetting","parameters":[{"name":"whiteboardId","in":"path","description":"The ID of the whiteboard.","required":true,"schema":{"type":"string","example":"HY8-AC_HSou4SXY1S-OmOg"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"share_link_setting":{"type":"object","properties":{"share_scope":{"type":"integer","description":"The access type of whiteboard share link. \n* Enum: \n* `0` - `Restricted`, Only people added can open with this link \n* `1` - `Same account` \n* `2` - Anyone \n* `3` - SAME_ACCOUNT_EXTERNAL_AUTH \n","example":0,"default":0,"enum":[0,1,2,3],"x-enum-descriptions":["Restricted. Only people added can open with this link.","Same account","Anyone","Same account external auth"]},"share_role":{"type":"integer","description":"The access level of a whiteboard share link. Use this field with `share_scope`. If `share_scope` set `0` - `Restricted`, this field is null. If `share_scope` set `1` - `Same account` or `2` - `Anyone`, this filed can be `2` - `Editor`, `3` - `Commenter` or `4` - `Viewer`. \n* Enum: \n* `2` - `Editor`\n* `3` - `Commenter` \n* `4` - Viewer \n","example":2,"enum":[2,3,4],"x-enum-descriptions":["Editor","Commenter","Viewer"]}},"description":"The access level and access type of a current whiteboard's share link."}},"description":"Updates a whiteboard's share setting."}}}},"responses":{"204":{"description":"**HTTP Status Code**: `204`   \n \nWhiteboard share setting updated successfully."},"400":{"description":"**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `34002` <br>\n Share role must be viewer for everyone. <br>\n**Error Code:** `34002` <br>\n Share role can't be null, owner, or co-owner for same account. <br>\n"},"403":{"description":"**HTTP Status Code:** `403` <br>\n Forbidden  \n\n **Error Code:** `111804` <br>\n Permission is needed to access this document. <br>\n"}},"security":[{"openapi_oauth":["whiteboard_share_setting:write:admin","whiteboard_share_setting:write","whiteboard:update:share_setting:admin","whiteboard:update:share_setting"],"openapi_authorization":[]}],"x-extensions":{"x-fixVersion":"ZDC-DAS 1.14.0","x-permissions":["WhiteboardManagement:Edit"],"x-macro-scopes":["whiteboard_share_setting:write:admin","whiteboard_share_setting:write"],"x-granular-scopes":["whiteboard:update:share_setting:admin","whiteboard:update:share_setting"]}}}},"components":{"securitySchemes":{"openapi_authorization":{"type":"apiKey","name":"Authorization","in":"header"},"openapi_oauth":{"type":"oauth2","flows":{"authorizationCode":{"authorizationUrl":"/","tokenUrl":"","refreshUrl":"","scopes":{"whiteboard_content:read:admin":"whiteboard_content:read:admin","whiteboard_content:read":"whiteboard_content:read","whiteboard:read:list_sessions":"whiteboard:read:list_sessions","whiteboard:read:list_sessions:admin":"whiteboard:read:list_sessions:admin","whiteboard:read:archived_file":"whiteboard:read:archived_file","whiteboard:read:archived_file:admin":"whiteboard:read:archived_file:admin","whiteboard:read:session":"whiteboard:read:session","whiteboard:read:session:admin":"whiteboard:read:session:admin","whiteboard_collaborator:write:admin":"whiteboard_collaborator:write:admin","whiteboard:write:collaborator:admin":"whiteboard:write:collaborator:admin","whiteboard:update:collaborator:admin":"whiteboard:update:collaborator:admin","whiteboard_collaborator:read:admin":"whiteboard_collaborator:read:admin","whiteboard:read:list_collaborators:admin":"whiteboard:read:list_collaborators:admin","whiteboard:delete:collaborator:admin":"whiteboard:delete:collaborator:admin","whiteboard:read:admin":"whiteboard:read:admin","whiteboard:read":"whiteboard:read","whiteboard:read:list_whiteboards:admin":"whiteboard:read:list_whiteboards:admin","whiteboard:read:list_whiteboards":"whiteboard:read:list_whiteboards","whiteboard:write":"whiteboard:write","whiteboard:write:whiteboard":"whiteboard:write:whiteboard","whiteboard:read:whiteboard:admin":"whiteboard:read:whiteboard:admin","whiteboard:read:whiteboard":"whiteboard:read:whiteboard","whiteboard:write:admin":"whiteboard:write:admin","whiteboard:update:whiteboard:admin":"whiteboard:update:whiteboard:admin","whiteboard:delete:whiteboard:admin":"whiteboard:delete:whiteboard:admin","whiteboard:delete:whiteboard":"whiteboard:delete:whiteboard","whiteboard_export:write:admin":"whiteboard_export:write:admin","whiteboard_export:write":"whiteboard_export:write","whiteboard:write:export":"whiteboard:write:export","whiteboard:write:export:admin":"whiteboard:write:export:admin","whiteboard:read:export":"whiteboard:read:export","whiteboard:read:export:admin":"whiteboard:read:export:admin","whiteboard_share_setting:write:admin":"whiteboard_share_setting:write:admin","whiteboard_share_setting:write":"whiteboard_share_setting:write","whiteboard:update:share_setting:admin":"whiteboard:update:share_setting:admin","whiteboard:update:share_setting":"whiteboard:update:share_setting"}}}}}}}